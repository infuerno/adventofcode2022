{
  "collection": [
    {
      "questionId": "d2b9d38a-a296-4160-9b14-5ba0b20dc031",
      "clipId": "44fa6d72-2b72-4afc-be2c-960bec70fed9",
      "clipTitle": "Generating Components",
      "distractors": [
        "`ng create component customer --inline-template --inline-style`",
        "`ng new component customer --inline-template --inline-style`",
        "`ng generate component customer --inline`"
      ],
      "key": "`ng generate component customer --inline-template --inline-style`",
      "moduleId": "089192a5-2c90-41cc-9310-23064ed77d24",
      "stem": "How do you create a new Angular component where the template and styles are in the component's `*.ts` file?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "20049611-4a7e-452e-9e25-9a8c564c1c3e",
      "clipId": "8dffdc75-e672-4edc-a595-2c2ad9ed1a0c",
      "clipTitle": "Configuring Application Routes",
      "distractors": ["All matches win.", "Best match wins."],
      "key": "First match wins.",
      "moduleId": "69f6018c-aa4e-465d-9bbd-8c1e365a072c",
      "stem": "What strategy does the router use to match URL segments to paths in the route configuration?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "501fb83f-0c95-4902-89ed-017843fb5fe0",
      "clipId": "bd6d099c-937d-41b6-9277-9ac5e9a3bce3",
      "clipTitle": "Form Building Blocks",
      "distractors": [
        "A data structure that automatically generates the HTML elements for the form",
        "A data structure that represents that data for the form and is used with two-way data binding"
      ],
      "key": "A data structure that represents the form and tracks state and values",
      "moduleId": "43d126f7-b2dc-4bcd-a8de-23011f39d31a",
      "stem": "What is a form model?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "b33e3e9b-2f5c-4c5f-aea8-4603ffa6014d",
      "clipId": "35115f81-7e9d-4ac1-9d2c-0b830c34449e",
      "clipTitle": "Angular CLI JSON File",
      "distractors": ["--suffix", "--dry-run", "--pre", "--skip-install"],
      "key": "--prefix",
      "moduleId": "5a5848db-3718-4b5b-9768-d53dfa64582a",
      "stem": "Which `ng new` flag configures all component prefixes for the app?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "d3dda98b-c6ba-427f-9b47-a3f3bd902a46",
      "clipId": "aaeca7fe-7a0c-4712-a2fd-0c99f724e7cb",
      "clipTitle": "Creating a Custom Validator",
      "distractors": ["A Service", "A  Pipe", "A Component"],
      "key": "A Directive",
      "moduleId": "e2bb5e1f-7379-4ee6-85ec-f0cf482e3d81",
      "stem": "Custom validators are implemented with which object?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "25c66aa8-579e-4e77-b727-5edcf711dab0",
      "clipId": "be6fc048-e910-4af8-b252-252d2eab90c3",
      "clipTitle": "Linting",
      "distractors": ["`ng tslint --fix`", "`ng fix --lint`", "`ng tslint --correct`", "`ng lint`"],
      "key": "`ng lint --fix`",
      "moduleId": "5a5848db-3718-4b5b-9768-d53dfa64582a",
      "stem": "Which `ng` command instructs the Angular CLI to verify that all code follows `tslint` settings, and corrects any problems it can find?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "e07ced7d-0630-4b5c-aaea-731d24a0b826",
      "clipId": "ff42b4cc-01de-4b15-aaae-314f2c833d13",
      "clipTitle": "Faking a Backend Server",
      "distractors": [
        "It cannot handle requests from the Angular Http service.",
        "It can only be used for POST operations."
      ],
      "key": "It can only be used for GET operations.",
      "moduleId": "e34c82bc-f84e-4c98-9803-d59f5e433731",
      "stem": "Using a JSON file to fake a backend server is limited because:",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "2e5b578a-014c-47fc-a053-af68e352702b",
      "clipId": "ddc3233e-323d-43a1-9021-494fba06560e",
      "clipTitle": "The Role of RxJS",
      "distractors": ["CacheObject", "POST", "RESTRequest", "Interceptor"],
      "key": "Observable",
      "moduleId": "79e93c6a-46cf-4ec5-aed5-40af4e664775",
      "stem": "What type do most methods on HttpClient return?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "16652b45-d2e9-4daf-87bb-d7698ba9a534",
      "clipId": "1fb6c100-d262-4479-a89f-6cc765477ec8",
      "clipTitle": "Present",
      "distractors": [
        "Applications that are performance dependent",
        "Games",
        "Mobile applications"
      ],
      "key": "Upgrading an AngularJS application",
      "moduleId": "1fa20f1f-12ac-4ef5-a97b-c757417f4259",
      "stem": "Angular is particularly suitable versus other frameworks for which scenario?",
      "stemImageUrl": null,
      "courseId": "7c8fb1e8-044d-4067-9928-0ab7e25863f0"
    },
    {
      "questionId": "88e8e4ed-c336-4718-8932-1239d17cc88a",
      "clipId": "bc676b41-bf98-4489-a14d-4b4a4455ea7b",
      "clipTitle": "Handling Input with Two-way Binding",
      "distractors": ["`ngModel='listFilter'`", "`{{listFilter}}`", "`([ngModel])='listFilter'`"],
      "key": "`[(ngModel)]='listFilter'`",
      "moduleId": "84d6d5db-2f3d-4f1e-8278-7d9029236920",
      "stem": "Which of the following is the correct syntax for two-way binding?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "00a11531-809e-4c45-895d-14e2e3e1a841",
      "clipId": "6827cb33-e69d-435f-94bb-eaa1e3123b43",
      "clipTitle": "Using a Route Resolver",
      "distractors": ["A standard component", "An Angular directive", "An Angular module"],
      "key": "A custom Angular service",
      "moduleId": "ad109302-ba92-4047-a6fa-91393a48b733",
      "stem": "A route resolver is often built as:",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "3dadf9e5-df13-4dee-9b51-d9739c31e325",
      "clipId": "3037aa6f-c9b4-4eaf-9458-a13e5b1b3e68",
      "clipTitle": "Event Bindings and Statements",
      "distractors": [
        "They cannot call a function.",
        "They cannot chain expressions together using semi-colons.",
        "Assignments using = are not allowed."
      ],
      "key": "They cannot use the \"new\" keyword.",
      "moduleId": "7686a42c-9648-4392-98ef-c6f1938be823",
      "stem": "Which of the following is true about event binding statements?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "163b545e-d857-4be3-9b56-d1988967ca81",
      "clipId": "ee4077bd-a641-4f23-96ac-308bd82efa2d",
      "clipTitle": "Executing Unit Tests",
      "distractors": ["`ng e2e`", "`ng run test`", "`ng unit`"],
      "key": "`ng test`",
      "moduleId": "ec75cc84-2af1-4a24-8ed8-007c4ca95275",
      "stem": "What command and/or flags would run unit tests?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "8ebd3640-08e4-4f6a-9792-515903f6c5ef",
      "clipId": "a0e2199c-eb14-4470-8dab-6b06785ad9b6",
      "clipTitle": "Creating Directives - The Trigger Directive",
      "distractors": ["To create sub components", "To create smaller components"],
      "key": "To give a DOM node additional functionality",
      "moduleId": "e41c41b2-a54a-4eb5-acb6-e3fdf326c7e9",
      "stem": "What are decorators used for?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "15f6e27b-58f3-4710-9cc9-22bddaa93f48",
      "clipId": "2dc3f8d6-b85e-485e-9ffe-c0e780b9b484",
      "clipTitle": "HTTP Access Using HttpClient",
      "distractors": ["Web workers", "The q library", "Async/await", "Promises"],
      "key": "Observables",
      "moduleId": "ed29b1f4-cc14-4aa1-bbfb-64aa49f23633",
      "stem": "What asynchronous technology does HttpClient's methods use?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "5433f1e6-61e5-4056-bc82-5c3d770f07ea",
      "clipId": "e38fa563-35df-4b40-a75b-3f2796d815a1",
      "clipTitle": "Commands for Generating a New App",
      "distractors": ["--practice", "--prefix", "--skip", "--skip-install"],
      "key": "--dry-run",
      "moduleId": "5a5848db-3718-4b5b-9768-d53dfa64582a",
      "stem": "Which flag on the `ng new` command instructs the CLI to report the files, but NOT write them?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "34ffad98-e617-435d-bbc2-36a2ddb61e27",
      "clipId": "628815cb-e873-4e4d-a6f3-4d740dfb8770",
      "clipTitle": "Running an Angular Application",
      "distractors": [
        "It builds the application for production and starts the deployment process",
        "It starts the default editor for the application so you can make changes",
        "It installs the packages defined in the package.json file"
      ],
      "key": "It compiles the application and starts a web server to serve the application to the browser",
      "moduleId": "6eecf288-844b-4ca1-bc9d-8ce7cb4aa8e0",
      "stem": "What does the Angular CLI do when you execute npm start/ng serve?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "2caaccc8-d425-4100-8e3e-ec66fe86313c",
      "clipId": "a72eb445-3856-409d-88e1-e15b48e839f3",
      "clipTitle": "Transforming Data with Pipes",
      "distractors": [
        "Bind a class property to an HTML element",
        "Output logging messages to the console",
        "Pass data to a child component"
      ],
      "key": "Format data for display",
      "moduleId": "84d6d5db-2f3d-4f1e-8278-7d9029236920",
      "stem": "What is the primary purpose of a pipe in an Angular template?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "e36613c7-a22b-4bc2-99bb-74116244fb65",
      "clipId": "554519a4-27af-4038-ac96-e9be633edce3",
      "clipTitle": "Create a FormArray",
      "distractors": [
        "FormArray items must be multiple instances of the same form building blocks. FormGroup items can be instances of any form building blocks.",
        "FormArray items are form elements. FormGroup items are FormControls."
      ],
      "key": "FormArray items are accessed by index. FormGroup items are accessed by name.",
      "moduleId": "49309a7f-772a-4813-a9cf-c55eb6400ae1",
      "stem": "What is the key difference between a FormGroup and a FormArray?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "7d17d37d-8ef4-4fb9-a522-d60db65954c7",
      "clipId": "68485ce3-1cf7-45c4-8fd2-f16e0685db21",
      "clipTitle": "Populating the Form with Data: Http Get",
      "distractors": ["The FormGroup's value property", "Two-way data binding"],
      "key": "The FormGroup's setValue or patchValue",
      "moduleId": "e34c82bc-f84e-4c98-9803-d59f5e433731",
      "stem": "When using the Reactive form approach, values retrieved from a Web server are displayed on the form using:",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "818f2dee-edbe-4799-86ed-48ecfe65276f",
      "clipId": "ad15b295-df66-41d2-8b5f-d51d74f47ea8",
      "clipTitle": "NgModel",
      "distractors": [
        "`formVar.formData`",
        "`formVar.getFormData()`",
        "`formVar.getObject()`",
        "`formVar.object`"
      ],
      "key": "`formVar.value`",
      "moduleId": "367f48b5-53ce-4da3-8236-8e45b8fd768e",
      "stem": "If you assume formVar is a template reference variable for the form, how would you gain access to the object Angular builds internally when the user is filling out a form?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "2f2decde-737f-4f11-b9b6-d985c8cd2179",
      "clipId": "d9812ba2-68d3-4b6f-a1cb-a3c6bf336b19",
      "clipTitle": "Populating Route Parameters",
      "distractors": [
        "As a set of key and value pairs passed as a single entry in the link parameters array",
        "As a set of key and value pairs passed outside of a link parmeters array",
        "In a separate link parameters array only for parameters"
      ],
      "key": "As additional entries in the link paramters array",
      "moduleId": "b2a3b4d8-dcbe-4426-a4db-01123b76f892",
      "stem": "How are required route parameters populated?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "69d1f32f-de76-41fc-aa42-e46bfe0210e9",
      "clipId": "bcbf30c7-c374-4490-b4c0-8979b4157f3c",
      "clipTitle": "Registering the Service",
      "distractors": [
        "By setting the `providedIn` property of the `Component`decorator for the App component",
        "By setting the `providedIn` property of the `Component`decorator for the component that needs it",
        "By declaring the service in an Angular module"
      ],
      "key": "By setting the `providedIn` property of the `Injectable`decorator for the service.",
      "moduleId": "daa589d7-8f11-4e2b-a1e5-eaffb664722c",
      "stem": "What is the current recommended way to register a service with the root Angular injector?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "e7a84fcf-10af-4d89-bebe-d35cbab3dcaa",
      "clipId": "81c9550e-ab83-4c28-af4f-2d2325bf47b5",
      "clipTitle": "State Management Options",
      "distractors": ["Immutable structure", "Code technique", "Manifest"],
      "key": "Store",
      "moduleId": "2a309310-2abc-4070-b96c-e99e04fc4959",
      "stem": "NgRx, ngrx-data, Observable Store, and other state management solutions all create a single ______ that can be used throughout an application.",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "45cdc3a9-c61a-45e2-ac1d-40cd316b41f2",
      "clipId": "a68f767f-2c39-496d-baf8-998b032a5eb6",
      "clipTitle": "Angular's Default Unit Testing Tools",
      "distractors": ["BeTesty", "ngUnit", "Moq", "NUnit"],
      "key": "Jasmine",
      "moduleId": "8929053b-ec03-4369-a0d8-88b56b437453",
      "stem": "What is the default unit testing framework used with Angular?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "15599a4d-cced-463c-8e50-8f41870a0a3c",
      "clipId": "0badc5a6-5fe9-4f2e-b7b8-de9cfa78bca7",
      "clipTitle": "Creating a Core Module",
      "distractors": ["The App Module", "A Feature Module", "A Shared Module"],
      "key": "The Core Module",
      "moduleId": "d4c4584b-aec9-4d07-a76d-6adecf43e8a1",
      "stem": "Which module should provide should application-wide singleton services?",
      "stemImageUrl": null,
      "courseId": "8525a84d-8923-43d7-b752-6fa8d94b2a0a"
    },
    {
      "questionId": "cfa2cf66-f96f-480a-bd3c-dda034aae45d",
      "clipId": "333dfe47-6b26-4f5f-8608-30ab1116aecb",
      "clipTitle": "Populating the Form with Data: Subscribe",
      "distractors": [
        "PUT puts a copy of an item with a specified an id.",
        "POST posts a copy of an item with a specified an id.",
        "POST puts data for a specific item by specifying an Id."
      ],
      "key": "PUT puts data for a specific item by specifying an Id.",
      "moduleId": "e34c82bc-f84e-4c98-9803-d59f5e433731",
      "stem": "One key difference between POST and PUT is:",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "a14aaf7c-9cbb-47df-8090-0c4cce10d2e0",
      "clipId": "d55aecbb-de78-413c-be07-e356ec2c3b11",
      "clipTitle": "Form Directives",
      "distractors": [
        "You build it in the component class.",
        "You set the ngForm directive on the form element in the template.",
        "You set the ngModel directive on the form element in the template."
      ],
      "key": "Angular automatically creates it for you.",
      "moduleId": "43d126f7-b2dc-4bcd-a8de-23011f39d31a",
      "stem": "When building a form using the **template-driven approach**, how is the form model created?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "9ee685f8-f4cd-41de-ba6f-7106f88f804f",
      "clipId": "13d88fbd-c9fe-4b6b-b9d9-90ad25c45169",
      "clipTitle": "CanActivate Guard",
      "distractors": [
        "{\r\n           path: ':id',\r\n           component: ProductDetailComponent,\r\n           activate: [ AuthGuard ]\r\n    }",
        "{\r\n           path: ':id',\r\n           component: ProductDetailComponent,\r\n           guard: [ canActivate: AuthGuard ]\r\n    }",
        "{       path: ':id',       component: ProductDetailComponent,       guard: [ AuthGuard ]}"
      ],
      "key": "{\r\n           path: ':id',\r\n           component: ProductDetailComponent,\r\n           canActivate: [ AuthGuard ]\r\n    }",
      "moduleId": "7193cc89-174d-4b6d-a053-0ac733b011a9",
      "stem": "Which route configuration illustrates the correct syntax for specifying a canActivate guard for a route?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "790b81b7-921e-43e1-9e48-e93256474066",
      "clipId": "15691ada-8942-4bcf-8977-58de5b5b36a3",
      "clipTitle": "Placing the Child View",
      "distractors": [
        "In the first child template",
        "In one of the child templates",
        "In any template"
      ],
      "key": "In the parent component's template",
      "moduleId": "ce45e68b-2862-40ff-ada9-315d2f49b5b9",
      "stem": "Where is the RouterOutlet directive for the child routes normally placed?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "35822c7c-c3cb-4029-a064-f19524eddcd5",
      "clipId": "4a6f1fec-d4b1-4216-bdb6-b5b2c235b903",
      "clipTitle": "Benefits and Types of Caching",
      "distractors": [
        "SQL caches",
        "Document caches",
        "Browser-specific caches",
        "Server-side caches"
      ],
      "key": "Application-specific client-side caches",
      "moduleId": "d7a36cf0-5937-450b-bd6c-58cdd3f75236",
      "stem": "What type of cache do interceptors allow you to build?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "4e5c4463-6d35-4e1b-a3d6-b2e9304eecb4",
      "clipId": "812e164e-e645-4702-b3ab-38611e4147fb",
      "clipTitle": "Lazy Loading",
      "distractors": [
        "To check criteria before initial load of the application",
        "To check criteria before loading a service",
        "To check criteria before loading a specific component"
      ],
      "key": "To check criteria before loading an asynchronous route",
      "moduleId": "6e6697ee-e137-4015-81c0-561254badafa",
      "stem": "What is the purpose of the `canLoad`guard?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "c2932341-3ff2-4b5a-ad38-7de13b42fa40",
      "clipId": "dec50e4b-b318-46ec-8718-015a18e6a67b",
      "clipTitle": "Data Access Service",
      "distractors": [
        "A message that is sent to a Web server requesting an action such as a GET, POST, or PUT",
        "The result of a query received from a database on a Web server"
      ],
      "key": "A message that is sent back from the Web server containing the result of an action, such as GET, POST, or PUT",
      "moduleId": "e34c82bc-f84e-4c98-9803-d59f5e433731",
      "stem": "What is an HTTP response?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "7a9e2c84-06f0-487b-bcc4-11a2f9e3b8ba",
      "clipId": "018f7fa9-5412-4e98-96bf-22d6ce970335",
      "clipTitle": "Reading a Route Parameter",
      "distractors": [
        "Subscribes to changes in the route",
        "Adds the parameter to the URL path segment"
      ],
      "key": "Subscribes to changes to the route parameter",
      "moduleId": "f367ca6e-c495-4a51-99f2-5801d994c50c",
      "stem": "What does this code do?\r\n\r\n\r\n    this.route.paramMap.subscribe(\r\n       params => this.id = +params.get('id')\r\n    );",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "620dca00-daae-4da8-a05d-b0e13b72bc08",
      "clipId": "4150a9f7-1617-4227-88d1-3efaff952aa4",
      "clipTitle": "Finding Elements by Directive",
      "distractors": [
        "`child()` and `children()`",
        "`child()` and `directive()`",
        "`css()` and `child()`"
      ],
      "key": "`css()` and `directive()`",
      "moduleId": "09d707d2-59c1-4f80-9dc4-66bfb6715dfe",
      "stem": "The \"By\" class exposes two functions for querying a DebugElement for children. What are they?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "df05812b-6e03-430b-9142-d5e1d303ebad",
      "clipId": "68485ce3-1cf7-45c4-8fd2-f16e0685db21",
      "clipTitle": "Populating the Form with Data: Http Get",
      "distractors": [
        "Deletes the set of FormControls within the FormGroup",
        "Performs an undo, reassigning the FormGroup value to the data model properties"
      ],
      "key": "Clears the FormGroup values and state information",
      "moduleId": "e34c82bc-f84e-4c98-9803-d59f5e433731",
      "stem": "The FormGroup reset method:",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "68d476e7-14c0-4069-af1c-e869ed1080d4",
      "clipId": "1826d528-5f47-42f1-b9ab-f74db17b367a",
      "clipTitle": "Communicating with Parent Components Using @Output",
      "distractors": [
        "You import the parent component into the child component.",
        "You add an `@Input()` property on the parent component and bind to it from the child component.",
        "You import the child component into the parent component."
      ],
      "key": "You add an `@Output()` property on the child component and bind to it from the parent component.",
      "moduleId": "a87a58a8-e2c5-48f9-95f7-84397c8935ef",
      "stem": "What is one way you can pass data from a child component to a parent component?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "05f7c3a7-73b0-48ef-8dbf-2c5cbbc56f17",
      "clipId": "0245eeda-0f72-4c0d-8817-52d22476ff80",
      "clipTitle": "Adding a Resolver to a Route Configuration",
      "distractors": [
        "`this.route.data['product']`",
        "`this.route.data['resolve']`",
        "`this.route.snapshot.data['resolve']`"
      ],
      "key": "`this.route.snapshot.data['product']`",
      "moduleId": "ad109302-ba92-4047-a6fa-91393a48b733",
      "stem": "How do you read the data from this route using a snapshot?\r\n\r\n\r\n    { \r\n       path: 'products/:id', \r\n       component: ProductDetailComponent,\r\n       resolve: { product: ProductResolver }\r\n     }",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "cb1ab4f5-8918-4c0d-96c5-391f31293313",
      "clipId": "0f515a77-5afd-4e74-803b-04b5296501cd",
      "clipTitle": "Hiding and Showing Content with ngIf",
      "distractors": [
        "Use `*ngSwitch` to hide the element.",
        "You should try not to design your applications in a way that allows this behavior.",
        "Use `*ngIf` to hide the element."
      ],
      "key": "Bind to the `[hidden]` property of the element.",
      "moduleId": "7686a42c-9648-4392-98ef-c6f1938be823",
      "stem": "If an object could potentially be shown/hidden frequently, what's the best way to handle its visibility?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "d3ea470f-3bbf-4789-a83d-8c549ac107ec",
      "clipId": "bf942dba-f0b3-4623-b8c5-fc71ce5121d5",
      "clipTitle": "Core and Shared Modules",
      "distractors": [
        "Items that are \"shared\" in the application",
        "Component-Object-Resource-Entity items",
        "Objects that will be created multiple times"
      ],
      "key": "Singleton objects (services, single use components, etc.)",
      "moduleId": "e8e1aa51-fdc5-4d60-a41c-cbadf51b5d01",
      "stem": "What items are stored in the \"core\" folder?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "d67ea2bc-c551-43c9-bfca-cf7943afdcb5",
      "clipId": "94c073ea-bd03-4958-80d9-5655c984c676",
      "clipTitle": "The Template: Demo",
      "distractors": [
        "`patchValue` sets values into the data model instead of the form model.",
        "`setValue` sets values into the data model instead of the form model.",
        "`patchValue` requires setting the values of all FormControls, not just a subset."
      ],
      "key": "`setValue` requires setting the values of all FormControls, not just a subset.",
      "moduleId": "c0fc9c74-66df-4fcf-8da2-05bd6af19a99",
      "stem": "What is the difference between `setValue` and `patchValue`?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "ef5c07e4-3e7f-46f2-87a0-2b349c3b89cb",
      "clipId": "b0dad4ac-d6ee-46cb-af03-3d08201cd7ce",
      "clipTitle": "Delivering Services to Components",
      "distractors": ["classes", "properties", "functions", "modules"],
      "key": "injectors",
      "moduleId": "1492c1eb-4ae2-42e2-a9a4-184958760ad4",
      "stem": "What part of the dependency injection system receive the services from a provider?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "474b3020-9afa-4ffe-8f58-1c0aade1a360",
      "clipId": "69b8d2ce-e4f4-4248-9a58-c948bc647761",
      "clipTitle": "Accessing Route Parameters",
      "distractors": [
        "Import the routes array where you defined your routes and access the parameters from the correct route object.",
        "Access the component's routeParameters property.",
        "Simply parse the current url using window.location."
      ],
      "key": "Import the ActivatedRoute service and use it to access the route parameters.",
      "moduleId": "b9a77cb3-6aa9-4986-a455-f072f3f78486",
      "stem": "What is the easiest way to access route parameters from a url?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "d671671c-5439-4354-b595-acbf9201cc60",
      "clipId": "c7531e80-acc2-4635-ad7b-85a8b85220c0",
      "clipTitle": "The Template",
      "distractors": [
        "To bind the form to the form model defined in the component class.",
        "To create a FormControl in the template with the defined name."
      ],
      "key": "To associate an input element with its FormControl within a FormGroup.",
      "moduleId": "c0fc9c74-66df-4fcf-8da2-05bd6af19a99",
      "stem": "What is the purpose of the formControlName directive?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "031a0caa-2550-4677-afd6-9e272b5e3bd9",
      "clipId": "fa7d7f10-69e8-4cb1-a4b1-8075c79ad58d",
      "clipTitle": "Using a Memo Decorator",
      "distractors": [
        "Delete the browser cache",
        "Act as a \"cache buster\" for CSS files",
        "Memorize the order of events"
      ],
      "key": "Cache the result returned from a function",
      "moduleId": "f44c91c6-d10f-465d-b978-ea30b695db87",
      "stem": "A @Memo() decorator can be used to:",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "f6322a01-501f-47b5-8854-d320d80fa653",
      "clipId": "ed179851-dc9c-482c-875a-fdd0b7347a42",
      "clipTitle": "Exception Handling",
      "distractors": [
        "To map observable responses to alternate formats",
        "To request logging of observable actions",
        "To transform the Observable stream"
      ],
      "key": "To request notifications and data from the observable",
      "moduleId": "1f67c7ef-9988-4fba-819e-9d9d1645bb1b",
      "stem": "What is the purpose of the `subscribe`method on an observable?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "22d52675-acc9-43ba-bf94-b20e1808feae",
      "clipId": "d9583d68-bd08-4f7c-bb1f-830b4d6a5b1d",
      "clipTitle": "Symbol Naming Best Practices",
      "distractors": ["lower_snake_case", "camelCase", "PascalCase"],
      "key": "UPPER_SNAKE_CASE",
      "moduleId": "099afa72-35ee-4f15-9f26-257b10c11665",
      "stem": "What is the recommended naming standard for constants?",
      "stemImageUrl": null,
      "courseId": "8525a84d-8923-43d7-b752-6fa8d94b2a0a"
    },
    {
      "questionId": "b52622d3-0ddf-4733-95e7-d9b8e02dd3f0",
      "clipId": "6a2ae8b2-f425-48f4-9721-c1abe2627162",
      "clipTitle": "Defining Interfaces",
      "distractors": [
        "A cleaner way to build a template",
        "A keyword to encapsulated styles",
        "A way to logically group component classes"
      ],
      "key": "A data type to strongly type any object",
      "moduleId": "2f317488-900b-4080-86cc-fee57f4ff08a",
      "stem": "One of the key benefits of an interface is that an interface can be used as:",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "b4120f59-64e1-462a-a234-bc849fac64bf",
      "clipId": "d3da4efa-e350-4191-af44-130aa4742a95",
      "clipTitle": "Watching",
      "distractors": [
        "this.customerForm.get('notification').valueChanges(\r\n      value => console.log(value)\r\n    );",
        "this.customerForm.get('notification').subscribe(\r\n      value => console.log(value)\r\n    );"
      ],
      "key": "this.customerForm.get('notification').valueChanges.subscribe(\r\n       value => console.log(value)\r\n    );",
      "moduleId": "fd2f2b95-8ee1-4e02-b9a2-b5946fb905f6",
      "stem": "Which is the correct syntax for watching the 'notification' FormControl and logging its value?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "ac9000ed-6e47-465b-a802-eaaf5ea124a6",
      "clipId": "5656e8a1-93b1-4e85-9d34-04ad1543434d",
      "clipTitle": "The Angular Style Guide",
      "distractors": [
        "None of the above",
        "Minimize team member communication",
        "Let every team member do their own thing"
      ],
      "key": "Create a team architecture template and a team style guide",
      "moduleId": "80a8c23b-57f0-4fdf-bbb9-c6c7644f6758",
      "stem": "What steps can you take to instantly increase your team's ability to deliver solid Angular applications?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "dcc27a5b-b2df-4c12-9fc1-a5d25e4b9fc2",
      "clipId": "894cb318-7449-4200-a16b-d2d5139bb0c1",
      "clipTitle": "Styling the Selected Route",
      "distractors": ["`routerLinkStyle`", "`routerLinkOptions`", "`routerLink`"],
      "key": "`routerLinkActive`",
      "moduleId": "77f5ce93-9faa-43b3-9e7e-1dd622d45074",
      "stem": "Which directive styles the active route?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "327005c7-1ef4-413f-8eea-eb391dc6cb6a",
      "clipId": "c4dbe955-3416-4d44-a53d-c03ec3b15443",
      "clipTitle": "Activating Routes",
      "distractors": [
        "To define a set of query parameters as part of a route",
        "To define a set of outlets for navigation",
        "To define the route configuration"
      ],
      "key": "To define the route segments for navigation",
      "moduleId": "69f6018c-aa4e-465d-9bbd-8c1e365a072c",
      "stem": "What is the purpose of the link parameters array?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "14b27621-5146-4efd-8bae-84c4beb01e73",
      "clipId": "fc2a21e0-fb1e-4716-a099-5415eecb5a0c",
      "clipTitle": "Bootstrapping Our App Component",
      "distractors": [
        "All application components must be defined in on Angular module",
        "You can only display other HTML templates by nesting them in AppComponent",
        "You can only build applications that display one template to the user"
      ],
      "key": "There is only one Web page (index.html) and all HTML templates are inserted into that one page",
      "moduleId": "97fbb958-e828-4258-8fc0-531723bc5206",
      "stem": "An Angular application is a \"Single Page Application\" or SPA. What does that mean?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "0efb5dc9-923a-4d50-9d6a-f3a734d42a62",
      "clipId": "69a8fceb-4534-4ac0-a1f3-6fa013001dad",
      "clipTitle": "Unit Tests in Angular",
      "distractors": ["A deep test", "An IQ test", "A unit test"],
      "key": "An integration test",
      "moduleId": "eff0edc6-2c84-4c0a-8e62-247a82ee1c76",
      "stem": "What kind of Angular test involves testing a single component with its template?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "365d7d8f-d954-4017-964c-8b38ab530e21",
      "clipId": "506612a6-ac2a-4e75-9b73-5c88ae1c4a0c",
      "clipTitle": "Activating Child Routes",
      "distractors": [
        "The **absolute path** requires the `absolute` keyword.",
        "The **relative path** requires a slash at the beginning and specification of each route segment."
      ],
      "key": "The **absolute path **requires a slash at the beginning and specification of each route segment.",
      "moduleId": "ce45e68b-2862-40ff-ada9-315d2f49b5b9",
      "stem": "What is the key syntax difference between activating a child route with an absolute path versus a relative path.",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "e7400e7f-a82a-4a58-b800-dd00dcc713df",
      "clipId": "d300e22d-3334-4e32-b528-e491d506fc2d",
      "clipTitle": "Building and Serving Our Files",
      "distractors": [
        "Group the routes under a single parent.",
        "Don't import the feature module in another module.",
        "Use a feature module."
      ],
      "key": "Define the routes as a service.",
      "moduleId": "6e6697ee-e137-4015-81c0-561254badafa",
      "stem": "The following are requirements to prepare for lazy loading **except **which one?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "587176ea-d6dd-451f-b9da-f94c430eab55",
      "clipId": "bacad4b7-4537-4a1f-a4a6-368edae24939",
      "clipTitle": "Container and Presentation Components",
      "distractors": [
        "Observer pattern",
        "Mediator pattern",
        "Input/Output pattern",
        "Parent/Child pattern"
      ],
      "key": "Container/Presentation pattern",
      "moduleId": "240f0850-8c1e-4be2-86ee-5c3b9d93d1e9",
      "stem": "What component pattern can be used to organize parent/child components?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "907fc158-32e3-45da-9f69-157040503553",
      "clipId": "0597a20d-a2aa-4943-98b7-74f48e2895c2",
      "clipTitle": "Gotchas",
      "distractors": [
        "How to create function return signatures",
        "How to use generics",
        "How to use interfaces"
      ],
      "key": "How to decorate identifiers with types",
      "moduleId": "3d787678-c594-499c-b575-d21223224733",
      "stem": "What is the most important feature of TypeScript to learn when learning Angular?",
      "stemImageUrl": null,
      "courseId": "7c8fb1e8-044d-4067-9928-0ab7e25863f0"
    },
    {
      "questionId": "d1fdb3ea-c43c-4a00-b0af-209aa05e11c1",
      "clipId": "68485ce3-1cf7-45c4-8fd2-f16e0685db21",
      "clipTitle": "Populating the Form with Data: Http Get",
      "distractors": ["The getProduct method is called.", "The server has returned a response."],
      "key": "The code calling getProduct subscribes to the resulting Observable.",
      "moduleId": "e34c82bc-f84e-4c98-9803-d59f5e433731",
      "stem": "The http.get method shown below is not executed until:\r\n\r\n\r\n    getProduct(id: number): Observable<Product> {\r\n       return this.http.get<Product>(url);\r\n    }",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "c1a96c00-a193-4f29-abd1-e6f60b959727",
      "clipId": "7563166a-b7f8-457a-92d2-41cf9b3d7bd6",
      "clipTitle": "Basic Features",
      "distractors": [
        "No need for a build tool",
        "No custom template syntax",
        "Integrated components & templates"
      ],
      "key": "Lazy Loading",
      "moduleId": "20a2027f-2caa-468f-b038-fde20ed13584",
      "stem": "Angular supports which of the following features?",
      "stemImageUrl": null,
      "courseId": "7c8fb1e8-044d-4067-9928-0ab7e25863f0"
    },
    {
      "questionId": "c9ea00d2-6cbb-424e-bed7-9860f457ac82",
      "clipId": "b2f609b5-b27d-415c-8395-019089a14d02",
      "clipTitle": "Feature Modules",
      "distractors": [
        "To consolidate Angular system modules, such as `BrowserModule`and `FormsModule`, into a logical group",
        "To provide services specifically for one set of application features",
        "To define all the logic for your application all in one place"
      ],
      "key": "To separate out the responsbilities for a specific feature set into its own Angular module",
      "moduleId": "11d66aca-fd35-4f51-bd0a-36abf26e63c2",
      "stem": "What is the purpose of a feature module?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "649ce9b4-1546-4153-ade1-301da9a7c544",
      "clipId": "ecbf4ec3-5439-4897-89de-7712e06d1182",
      "clipTitle": "Handling Events with Event Binding",
      "distractors": [
        "Property binding of the `click`property to the `toggleImage`property",
        "Property binding of the `click`property to the `toggleImage`method",
        "Event binding of the `click`event to the `toggleImage`property"
      ],
      "key": "Event binding of the `click`event to the `toggleImage`method",
      "moduleId": "84d6d5db-2f3d-4f1e-8278-7d9029236920",
      "stem": "The following syntax is:\r\n\r\n\r\n    <button (click)='toggleImage()'/>",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "d653ae31-3cba-4c82-8217-2ea1c16a81b3",
      "clipId": "8e186bb6-fa60-4b4e-bde6-90ecb975a5d8",
      "clipTitle": "Using Route Guards",
      "distractors": [
        "canLoad ... canActivate",
        "canActivate ... resolve",
        "canActivate ... canDeactivate"
      ],
      "key": "canDeactivate ... resolve",
      "moduleId": "7193cc89-174d-4b6d-a053-0ac733b011a9",
      "stem": "Route guards are processed in a specific order. Which pair below are the first and last guards to be checked?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "22ca000d-429f-4e7d-9d8e-56c76522ba7c",
      "clipId": "b963a7f7-01b9-456c-9552-0b1c556e48f2",
      "clipTitle": "Understanding RxJS Subjects",
      "distractors": ["Event", "tap()", "mergeMap()", "map()"],
      "key": "Subject",
      "moduleId": "cadef368-dfae-45dd-92ef-b322e4526d7b",
      "stem": "Which RxJS object can be used to simplify communication in an Angular application?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "8b807fa9-c894-46c4-be39-283c14418b41",
      "clipId": "87df13d3-f518-495a-b864-567b29274073",
      "clipTitle": "Clearing Secondary Outlets",
      "distractors": [
        "`<a [routerLink]=\"[]\">x</a>`",
        "`<a [routerLink]=\"[{ outlets: { }]\">x</a>`",
        "`<a [routerLink]=\"[{ secondary: { popup: null } }]\">x</a>`"
      ],
      "key": "`<a [routerLink]=\"[{ outlets: { popup: null } }]\">x</a>`",
      "moduleId": "b9a688f9-94d7-4590-b04d-5429ad200698",
      "stem": "Which is the correct syntax for clearing a secondary outlet?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "699e4a81-c555-4933-94ad-e6a1480aa1c3",
      "clipId": "7443cb93-388f-4d23-af48-4edc94400155",
      "clipTitle": "Pre-loading Data for Components",
      "distractors": [
        "Create a route guard and use the \"canActivate\" property of the component's route.",
        "Load the data in the ngOnInit method of the component.",
        "Load the data in the constructor of the component."
      ],
      "key": "Create a route resolver and use the \"resolve\" property of the component's route.",
      "moduleId": "b9a77cb3-6aa9-4986-a455-f072f3f78486",
      "stem": "How do you pre-load data for a component before the component is displayed?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "69f635bc-1152-4409-b675-21b5c22be6c7",
      "clipId": "8b834f23-f605-4c2a-a858-ada01bd88911",
      "clipTitle": "Generating and Exploring a New App",
      "distractors": ["ng create my-dream-app", "ng test my-dream-app", "ng g my-dream-app"],
      "key": "ng new my-dream-app",
      "moduleId": "33143d50-f2c9-43de-81af-5ec5c6fbfd49",
      "stem": "What command do you run to create a new Angular app named **my-dream-app**?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "3ea6a0fe-bdfd-48da-af29-7c760852ebf1",
      "clipId": "fee000ea-0e8f-449f-85d9-6b5998c0dd0b",
      "clipTitle": "HttpClient and RxJS Operators",
      "distractors": ["switchObservable()", "changeMap()", "forkJoin()"],
      "key": "switchMap()",
      "moduleId": "f44c91c6-d10f-465d-b978-ea30b695db87",
      "stem": "What RxJS operators can be used to change from one observable to another?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "28f8043c-b906-4ab4-9293-0889de920d24",
      "clipId": "5e9f56a8-1fea-4e97-adfe-b23ed009a908",
      "clipTitle": "Providing Data with a Route",
      "distractors": [
        "Provide query parameters to a route",
        "Provide dynamic application data to a route",
        "Provide required parameters to a route"
      ],
      "key": "Provide static data to a route",
      "moduleId": "ad109302-ba92-4047-a6fa-91393a48b733",
      "stem": "What is the purpose of the data property shown here?\r\n\r\n\r\n    { \r\n         path: 'products',\r\n         component: ProductListComponent,\r\n         data: { pageTitle: 'Product List' }\r\n       }",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "4ac9eff3-d654-404f-b362-2bb42642de27",
      "clipId": "c3249578-1635-4445-9c2f-6e79adf6be35",
      "clipTitle": "The Single Responsibility Principle",
      "distractors": ["The Simplicity Principle", "The Law of Demeter", "The One-to-One Rule"],
      "key": "The Single Responsibility Principle",
      "moduleId": "099afa72-35ee-4f15-9f26-257b10c11665",
      "stem": "What coding principle suggests that a service, component, or other class shouldn't take on too many behaviors?",
      "stemImageUrl": null,
      "courseId": "8525a84d-8923-43d7-b752-6fa8d94b2a0a"
    },
    {
      "questionId": "b5cb2dd4-470f-4e76-a293-17e6a32e7ea6",
      "clipId": "627e42b4-a167-4492-a19c-d2c445bc23a4",
      "clipTitle": "Demo: Retrieving Data Over HTTP with Resolvers",
      "distractors": ["`HttpGet`", "`Download`", "`Retrieve`", "`Eval`"],
      "key": "`Resolve`",
      "moduleId": "0422dad7-c41b-4849-93d5-5791e520a280",
      "stem": "What is the name of the interface that resolvers should implement?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "5052a3cf-fca9-4988-b2d9-7e43f80d5a8b",
      "clipId": "6f2021fe-dac6-480d-9520-085180649ed4",
      "clipTitle": "Activating Secondary Routes: RouterLink",
      "distractors": [
        "`<a [routerLink]=\"['messages', { outlets: { popup } }]\">Messages</a>`",
        "`<a [routerLink]=\"[{ secondary: { popup: ['messages'] } }]\">Messages</a>`",
        "`<a [routerLink]=\"['messages', { secondary: { popup } }]\">Messages</a>`"
      ],
      "key": "`<a [routerLink]=\"[{ outlets: { popup: ['messages'] } }]\">Messages</a>`",
      "moduleId": "b9a688f9-94d7-4590-b04d-5429ad200698",
      "stem": "Which is the correct syntax for activating a secondary route?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "eb8146ef-a9ae-415b-b2f0-be111422dc4a",
      "clipId": "cc0c3ae3-8068-4a88-9e3b-b53f7029032a",
      "clipTitle": "Adjusting Validation Rules at Runtime",
      "distractors": [
        "To turn off validation of `phoneControl`",
        "To reset validation of `phoneControl` based on its original validators",
        "To perform an undo and reset the `phoneControl` to its original value"
      ],
      "key": "To trigger validation of `phoneControl`based on its current validators",
      "moduleId": "5ac0688c-a15f-4da9-9019-5fdcea8d38ae",
      "stem": "What is the purpose of the last line of code here:\r\n\r\n\r\n    if (notifyVia === 'text') {\r\n       phoneControl.setValidators(Validators.required);\r\n    } else {\r\n       phoneControl.clearValidators();\r\n    }\r\n    phoneControl.updateValueAndValidity();",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "a6a140b8-485d-45f4-bac7-26e52d520a61",
      "clipId": "95079fe2-0dc5-48f4-9236-5540e440f184",
      "clipTitle": "Cloning in Action",
      "distractors": [
        "It doesn't work",
        "It skips properties",
        "It doesn't do a deep copy of the object"
      ],
      "key": "It doesn't work with dates",
      "moduleId": "240f0850-8c1e-4be2-86ee-5c3b9d93d1e9",
      "stem": "What is one limitation of using JSON.parse(JSON.stringify(object)) for cloning?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "9d10aa64-5f70-4812-b39b-e28e2ba55ac6",
      "clipId": "68db5870-e90b-4076-af49-07f25dc82e49",
      "clipTitle": "CSS Classes for Validation",
      "distractors": ["`ng-touched`", "`ng-dirty`", "`ng-valid`", "`ng-untouched`"],
      "key": "`ng-pristine`",
      "moduleId": "40a161c7-66c5-48b7-9262-4f707923ee11",
      "stem": "Which Angular validation class shows that a form field's value has not changed despite the user tabbing over the field?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "041eefd7-89a0-4e62-8d99-6b03fd50ae43",
      "clipId": "5f2febcd-1b8c-4e9b-88ee-74f468ff0b93",
      "clipTitle": "Adding Scripts, Styles, and Assets",
      "distractors": [
        "In the styles property in the `package.json` file",
        "The Angular CLI cannot deploy additional styles.",
        "In the scripts property in the `angular.json` file"
      ],
      "key": "In the styles property in the `angular.json` file",
      "moduleId": "ce92dad9-37bc-4418-b070-102f5e17c9ee",
      "stem": "How do you instruct the Angular CLI to find and deploy styles?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "bc62ac5b-4236-47db-b9e7-7fed7245bba8",
      "clipId": "98a89025-2ac1-4ed7-b564-76ddfe0c7d03",
      "clipTitle": "Setting Built-in Validation Rules",
      "distractors": [
        "firstName: ['', Validators.required, Validators.minLength(3)]",
        "firstName: {'', [Validators.required, Validators.minLength(3)]}"
      ],
      "key": "firstName: ['', [Validators.required, Validators.minLength(3)]]",
      "moduleId": "5ac0688c-a15f-4da9-9019-5fdcea8d38ae",
      "stem": "Which is the correct syntax for adding multiple validators to a FormControl?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "340b770c-bf87-45e2-8c2a-6e9210ac81bd",
      "clipId": "62dd65dc-a422-4a3c-8ea0-1c12b3177019",
      "clipTitle": "Angular CLI Requirements",
      "distractors": ["npm -v", "node npm", "node show version"],
      "key": "node -v",
      "moduleId": "33143d50-f2c9-43de-81af-5ec5c6fbfd49",
      "stem": "What command do you run to see the node version?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "bb0ce8ee-c183-445b-8750-92f1d5c47808",
      "clipId": "68485ce3-1cf7-45c4-8fd2-f16e0685db21",
      "clipTitle": "Populating the Form with Data: Http Get",
      "distractors": [
        "The code calling getProduct subscribes to the resulting Observable.",
        "The getProduct method is called."
      ],
      "key": "The server has returned a response.",
      "moduleId": "e34c82bc-f84e-4c98-9803-d59f5e433731",
      "stem": "The pipe method shown below is not executed until:\r\n\r\n\r\n    getProduct(id: number): Observable<Product> {\r\n       return this.http.get<Product>(url)\r\n         .pipe(\r\n           tap(data => console.log(JSON.stringify(data)))\r\n       );\r\n    }",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "36a247de-21f9-4501-af54-d186fefca223",
      "clipId": "aa4a5b59-c862-4fc6-9769-9f22864b8f64",
      "clipTitle": "Interpolation, Property Bindings, and Expressions",
      "distractors": [
        "They cannot chain expressions together using semi-colons.",
        "They cannot use the `new` keyword.",
        "Assignments using `=`, `+=`, etc are not allowed."
      ],
      "key": "All of these",
      "moduleId": "7686a42c-9648-4392-98ef-c6f1938be823",
      "stem": "Which of the following is true about property binding expressions?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "12c308e9-b312-40af-b4fe-2dc320c2114d",
      "clipId": "98a89025-2ac1-4ed7-b564-76ddfe0c7d03",
      "clipTitle": "Setting Built-in Validation Rules",
      "distractors": ["firstName: {'', Validators.required}", "firstName: '', Validators.required"],
      "key": "firstName: ['', Validators.required]",
      "moduleId": "5ac0688c-a15f-4da9-9019-5fdcea8d38ae",
      "stem": "Which is the correct syntax for adding a built-in validator to a FormControl?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "35ffc3b5-dee8-4b67-ae01-e69e9b696d3e",
      "clipId": "f6285854-1c7c-4d28-981d-61d58056b22e",
      "clipTitle": "Form Posting Using Observables",
      "distractors": [
        "To type cast an observable value",
        "To validate observable data",
        "To return the source of an observed stream",
        "To change the return data type of an observable"
      ],
      "key": "To quickly create an observable",
      "moduleId": "ed29b1f4-cc14-4aa1-bbfb-64aa49f23633",
      "stem": "What is the purpose of the fuction `of()` in the rxjs library?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "151648e7-2c7b-4f03-a542-28ec26cc786d",
      "clipId": "a37b38e2-2b1b-404c-8311-bf7802fd6616",
      "clipTitle": "Using Lifecycle Hooks",
      "distractors": [
        "Import the lifecycle hook, add the hook property to the metadata, write the code for the hook method",
        "Build a lifecycle class, import that class, write the code for the hook method",
        "Build a lifecycle component, add a selector, and write the code for the hook method"
      ],
      "key": "Import the lifecycle hook, implement the lifecycle hook interface, write the code for the hook method",
      "moduleId": "2f317488-900b-4080-86cc-fee57f4ff08a",
      "stem": "The three steps for using a lifecycle hook in a component are:",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "7d3a947d-e2a4-4061-a2a4-23bb87a6251d",
      "clipId": "60ceba53-c708-4a05-ab3e-dd159a1d29f0",
      "clipTitle": "Defining and Providing Interceptors",
      "distractors": [
        "The order is indeterminate",
        "Reverse alphabetical order by class name",
        "The calling controller determines the order",
        "Alphabetical order by class name"
      ],
      "key": "The order in which they were provided in a module",
      "moduleId": "55e63a75-3152-4eb2-aa9a-07debb59174f",
      "stem": "In what order do interceptors execute?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "d2bf495e-984b-4e33-b615-ea989d27848e",
      "clipId": "06010875-8db8-4298-9e4b-f3445573599f",
      "clipTitle": "Routing to a Form",
      "distractors": ["Configures the route", "Links the route to the Product Edit component"],
      "key": "Activates the route, passing the product Id on the URL",
      "moduleId": "f367ca6e-c495-4a51-99f2-5801d994c50c",
      "stem": "What does the `routerLink`do in this example?\r\n\r\n\r\n    [routerLink]=\"['/products', product.id, 'edit']\"",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "9329a233-57b6-4b04-887e-d4d5cf49ea78",
      "clipId": "d88361b7-e922-484e-89ea-95fb8871e918",
      "clipTitle": "Running Your Unit Tests",
      "distractors": ["npm test --default", "npm unit", "npm test --watch"],
      "key": "ng test",
      "moduleId": "eff0edc6-2c84-4c0a-8e62-247a82ee1c76",
      "stem": "Running \"npm test\" from the command line is the same as running which command?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "80828108-a1fd-4f06-92f2-ed126f990d59",
      "clipId": "dab44f96-bd3a-4569-9d58-767c417b1344",
      "clipTitle": "Generating Code (ng generate)",
      "distractors": [
        "Generate the deployment package for an Angular application",
        "Generate a new Angular application",
        "Generate the node-modules folder for the application"
      ],
      "key": "Generate pieces of an Angular application such as components, services, and modules",
      "moduleId": "2e20883c-416f-4a3b-9ddf-0ed159fd6956",
      "stem": "What is the purpose of the Angular CLI `ng generate` command?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "b4fb9892-b628-4f62-b415-c3500a139b88",
      "clipId": "8aa12161-3aed-4dd3-a9f1-b67e00a83cff",
      "clipTitle": "Activating a Route with Code",
      "distractors": [
        "To define child routes based on criteria",
        "To add exception handling for a route",
        "To pass encrypted data to a route"
      ],
      "key": "To prevent navigation to or away from a route based on criteria",
      "moduleId": "093074bd-a2a4-48a6-b024-74ecd1c0805c",
      "stem": "What is the purpose of a route guard?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "519f7ee2-9163-4cdf-9a32-4c0b14f117f7",
      "clipId": "21345ca1-0268-4db0-b92f-5b7720bdafd9",
      "clipTitle": "Building Custom Pipes",
      "distractors": [
        "Provide custom element tags that can be used in any template",
        "Tap into lifecycle hooks",
        "Provide shared data across components"
      ],
      "key": "Provide custom transformation of bound data before it is displayed",
      "moduleId": "2f317488-900b-4080-86cc-fee57f4ff08a",
      "stem": "Why build a custom pipe?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "789a3ae5-ac56-4025-862c-690b6e3673b4",
      "clipId": "59c96da4-2ad9-423e-a21d-fa0b50c81bc2",
      "clipTitle": "Repeating Data with ngFor",
      "distractors": ["`*ngSwitch`", "`*ngEach`", "`*ngRepeat`"],
      "key": "`*ngFor`",
      "moduleId": "7686a42c-9648-4392-98ef-c6f1938be823",
      "stem": "Which of the following would you use to display a list of elements in a component template?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "fbe1ede7-7d04-4716-9f43-0c813d7df949",
      "clipId": "ef6d8775-f29c-45b9-818b-4b1330df0f35",
      "clipTitle": "Guarding Against Route De-activation",
      "distractors": [
        "You don't need to worry about this since the field won't be invalid if it hasn't been changed.",
        "Bind to the \"change\" event of the corresponding field and track whether the field has been changed.",
        "Check the control's touched property."
      ],
      "key": "Check the control's dirty property.",
      "moduleId": "b9a77cb3-6aa9-4986-a455-f072f3f78486",
      "stem": "When validating an Angular form, how can you only show a validation message if the user has edited a form control?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "e846c13c-e738-498c-aef1-2875185f6506",
      "clipId": "fcc3e960-a52b-4657-9a3d-728565347cde",
      "clipTitle": "What is a REST Service?",
      "distractors": ["PATCH", "PUT", "DELETE", "POST"],
      "key": "GET",
      "moduleId": "4bd0d46c-f530-4162-adfe-21f4d54cdbe8",
      "stem": "What HTTP verb is used when retrieving data from a REST service?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "a72e0887-f615-4267-a546-e284e9b778a1",
      "clipId": "c2fee7c6-9393-4fba-a9c6-059f35ee22e0",
      "clipTitle": "Importing the Angular Router",
      "distractors": [
        "Only`forChild` provides the needed directives.",
        "Only`forRoot` provides the needed directives.",
        "Only`forChild` registers the router service."
      ],
      "key": "Only `forRoot` registers the router service.",
      "moduleId": "69f6018c-aa4e-465d-9bbd-8c1e365a072c",
      "stem": "What is the difference between  `RouterModule.forRoot()` and `RouterModule.forChild()`?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "8e76863a-5989-48cc-83e1-50728a47ab4a",
      "clipId": "5d3dbe8d-4b25-4aaf-877e-d18c733d97a6",
      "clipTitle": "Anatomy of an Angular Application",
      "distractors": [
        "Transform data for display",
        "Specify the metadata defining a component",
        "Define the code for the class associated with the view"
      ],
      "key": "Provide the HTML for the user interface",
      "moduleId": "32eac56a-73af-44af-819c-c66cc2a5d553",
      "stem": "What is the purpose of an Angular template?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "321af9d8-2727-4a2e-9824-e5e55c804273",
      "clipId": "c388c959-9483-444a-ac68-560520bc3064",
      "clipTitle": "Passing Data into a Child Component",
      "distractors": [
        "You import the parent component into the child component.",
        "You import the child component into the parent component.",
        "You add an `@Output()` property on the parent component and bind to it from the child component."
      ],
      "key": "You add an `@Input()` property on the child component and bind to it from the parent component.",
      "moduleId": "15416a57-cdfa-4ed0-9214-a8a34743842f",
      "stem": "What is one way you can pass data from a parent component to a child component?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "caa4caf1-f2ef-41cd-a69f-6de72f58c180",
      "clipId": "db441462-678f-4107-9550-3a1b8785ff32",
      "clipTitle": "Organizing Features",
      "distractors": [
        "The feature-based approach doesn't offer any benefits",
        "More reuse",
        "Related code is spread across convention-based folders"
      ],
      "key": "Related code is kept in a single location",
      "moduleId": "e8e1aa51-fdc5-4d60-a41c-cbadf51b5d01",
      "stem": "What is the main benefit of a feature-based approach?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "a8ae8ffc-a856-47e5-8ad3-816ca5db8b51",
      "clipId": "e82be62b-a7e7-4f11-8c89-967a2f798f37",
      "clipTitle": "Executing End to End Tests",
      "distractors": ["`ng protractor`", "`ng run test`", "`ng test`"],
      "key": "`ng e2e`",
      "moduleId": "ec75cc84-2af1-4a24-8ed8-007c4ca95275",
      "stem": "What command runs end-to-end tests?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "144a7a64-b6d7-42a3-b729-b850d7b1321e",
      "clipId": "44fa6d72-2b72-4afc-be2c-960bec70fed9",
      "clipTitle": "Generating Components",
      "distractors": [
        "`ng c c customer -i`",
        "`ng g c customer -it`",
        "`ng new c customer -it -is`"
      ],
      "key": "`ng g c customer -it -is`",
      "moduleId": "089192a5-2c90-41cc-9310-23064ed77d24",
      "stem": "What is a valid alias for `ng generate component customer --inline-template --inline-style`?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "8da7d9f0-b3ea-4f47-b9e1-3b06da8f900b",
      "clipId": "6827cb33-e69d-435f-94bb-eaa1e3123b43",
      "clipTitle": "Using a Route Resolver",
      "distractors": [
        "Provide static data to a route",
        "Provide query parameters to a route",
        "Provide required parameters to a route"
      ],
      "key": "Provide dynamic application data to a route",
      "moduleId": "ad109302-ba92-4047-a6fa-91393a48b733",
      "stem": "What is the purpose of a route resolver?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "02150f2b-6b52-4bc5-9d68-c8ff5ef5e2b5",
      "clipId": "b469726b-33b8-4ef4-b7d4-822b3c91eae9",
      "clipTitle": "Observables",
      "distractors": ["LinkerJS", "CommonJS", "jQuery", "MirrorJS"],
      "key": "RxJS",
      "moduleId": "63b87213-d5f3-43c1-888b-f55948f8b394",
      "stem": "What is the name of the JavaScript library that contains the Observable data type?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "627511cf-a486-4909-8c9f-92b594887309",
      "clipId": "fb8aaaa5-49a4-4bf8-ac5b-17fd251b5f9a",
      "clipTitle": "Setting up the Angular Application",
      "distractors": [
        "The `npminstall.json` file defines the packages to install.",
        "The `install.json` file defines the packages to install.",
        "The `tsconfig.json` file defines the packages to install."
      ],
      "key": "The `package.json` file defines the packages to install.",
      "moduleId": "6eecf288-844b-4ca1-bc9d-8ce7cb4aa8e0",
      "stem": "When you type `npm install`, how does npm know what to install?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "4f5bc237-808b-4ad2-8f0d-b259071b2a5c",
      "clipId": "c460b6f2-1742-4e54-9be6-60998ba05db2",
      "clipTitle": "Handling Events ",
      "distractors": [
        "Expose a property that a container can set using property binding",
        "Expose an output channel for logging",
        "Expose a two-way binding target that a container can set"
      ],
      "key": "Expose an event property that a container can listen for using event binding",
      "moduleId": "e9cd157d-39d8-4efd-a558-04644b972188",
      "stem": "The purpose of the `@Output`decorator in a nested component is to:",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "cf18203b-80f0-4b8c-b831-9bb104877a32",
      "clipId": "7c375287-b8ea-409e-a697-477fe6c142e5",
      "clipTitle": "Bootstrapping an Angular App",
      "distractors": [
        "You load your module directly in your index.html file.",
        "Angular discovers the module based on the component that was bootstrapped.",
        "You add your Angular module as a package in your SystemJs config."
      ],
      "key": "In your main SystemJs package (e.g. main.ts), you pass your app module into the platformBrowserDynamic.bootstrapModule() method,.",
      "moduleId": "141673c4-d889-4f3b-91fd-e7190fed0544",
      "stem": "When bootstrapping an Angular app, how do you specify the main Angular app module to load?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "64bfb904-b508-41be-aa15-a27dd167b2aa",
      "clipId": "8a9405b5-49b8-4953-bf6e-31dc77da9afa",
      "clipTitle": "Subscribing to Observables",
      "distractors": ["`callbackHandler()`", "`on()`", "`completion()`", "`register()`"],
      "key": "`subscribe()`",
      "moduleId": "4bd0d46c-f530-4162-adfe-21f4d54cdbe8",
      "stem": "What method on an Observable do you call to register the functions that will handle the results?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "06bedad1-ba33-4bb3-9d53-bfc34e04f50c",
      "clipId": "dc02eee5-0442-44c4-b68a-0366ba478c4e",
      "clipTitle": "Testing a Pipe",
      "distractors": ["expect()", "test()", "describe()"],
      "key": "it()",
      "moduleId": "c8a81c99-3773-4685-a4a8-7feae45e2ea6",
      "stem": "Which function defines a test?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "8f253bfc-65c8-419b-8fad-5de0a9876ddb",
      "clipId": "19da18f1-5923-43f5-8da4-7c48ffd90b64",
      "clipTitle": "Setting a canDeactivate Guard",
      "distractors": [
        "Navigate to another application",
        "Close the browser",
        "Navigate to another route"
      ],
      "key": "Navigate away from the current route",
      "moduleId": "f367ca6e-c495-4a51-99f2-5801d994c50c",
      "stem": "The purpose of the canDeactivate route guard is to perform logic that determines whether the application can do what?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "47154770-a1f2-4466-b4fb-99d17d7d6596",
      "clipId": "03a91655-4e72-4f3c-bc7c-f25f0bac77ac",
      "clipTitle": "CanLoad Guard",
      "distractors": [
        "Load all modules, load all but lazy loaded modules, or custom.",
        "Load all services, load all components, or custom.",
        "Load modules on demand, preload specified modules, or custom."
      ],
      "key": "Load modules on demand, preload all, or custom.",
      "moduleId": "6e6697ee-e137-4015-81c0-561254badafa",
      "stem": "What are the preloading strategy options?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "589bb7c8-9c33-4d6d-8b19-32e117e38f2a",
      "clipId": "c1ad5d72-3590-4c76-b0d6-dbc609f1926e",
      "clipTitle": "Installing What We Need: package.json",
      "distractors": ["Deployment only", "Installing the Angular CLI", "Development only"],
      "key": "Development and deployment",
      "moduleId": "6eecf288-844b-4ca1-bc9d-8ce7cb4aa8e0",
      "stem": "The package.json file for an application contains the packages required for:",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "420d09a8-5a3f-406b-88ff-865cc822de0e",
      "clipId": "79a40a97-2331-42d5-b328-fa17bc3ad60a",
      "clipTitle": "Unsubscribing from Observables",
      "distractors": ["Subject", "EventBus", "ObservableService", "Observable"],
      "key": "Subscription",
      "moduleId": "cadef368-dfae-45dd-92ef-b322e4526d7b",
      "stem": "What type of RxJS object is returned when subscribing to an observable?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "884cfd5e-cc8f-44c4-a263-41205987aae6",
      "clipId": "a55c08a8-ae31-480c-9dd1-4704ded76ea3",
      "clipTitle": "The Angular CLI",
      "distractors": ["minifying", "bundling", "linting"],
      "key": "transpilation",
      "moduleId": "c9fb3ce6-dfc5-4fb7-8877-a3fa3f6cd9c5",
      "stem": "Which process allows an application written in TypeScript to run in the browser?",
      "stemImageUrl": null,
      "courseId": "7c8fb1e8-044d-4067-9928-0ab7e25863f0"
    },
    {
      "questionId": "8b55c068-323c-4053-a0a6-6d2e2c47017b",
      "clipId": "c4dbe955-3416-4d44-a53d-c03ec3b15443",
      "clipTitle": "Activating Routes",
      "distractors": [
        "To identify where to display the routed component's template",
        "To identify the location of the menu for the application",
        "To define the route configuration"
      ],
      "key": "To activate a route when the user clicks an element",
      "moduleId": "69f6018c-aa4e-465d-9bbd-8c1e365a072c",
      "stem": "What is the purpose of the `routerLink` directive?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "970222c8-24cf-4d77-8e5b-5dcaf18f0250",
      "clipId": "9c24ed10-0ae7-4ab4-995e-b8a906c0690a",
      "clipTitle": "Promises",
      "distractors": ["first and last", "pass and fail", "start and end", "success and error"],
      "key": "resolve and reject",
      "moduleId": "63b87213-d5f3-43c1-888b-f55948f8b394",
      "stem": "What are the conventional names for the functions used to report the success or failure of a promise?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "4ade4178-6871-4a34-a2ed-eff330fc5632",
      "clipId": "69a8fceb-4534-4ac0-a1f3-6fa013001dad",
      "clipTitle": "Unit Tests in Angular",
      "distractors": [
        "One module from your app",
        "At least one component and one service",
        "A component template"
      ],
      "key": "A single class and nothing else",
      "moduleId": "eff0edc6-2c84-4c0a-8e62-247a82ee1c76",
      "stem": "Which of the following is used in an isolated test?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "f88c00ab-9303-4bcd-8a1d-133de62d2aa9",
      "clipId": "a0be0cd0-034b-4bd0-96ab-821f20f1fa15",
      "clipTitle": "Reading Route Parameters: Snapshot",
      "distractors": ["RouteSnapshot service", "ActivatedState service", "Router service"],
      "key": "ActivatedRoute service",
      "moduleId": "b2a3b4d8-dcbe-4426-a4db-01123b76f892",
      "stem": "What is the name of the routing service used to read route parameters?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "21fd851a-55c7-4f98-8bde-c127e7b3ad73",
      "clipId": "0a81880c-92bf-41b4-ac24-22df01e4660d",
      "clipTitle": "What Is Dependency Injection?",
      "distractors": ["import statement", "tsconfig file", "forms", "destructor"],
      "key": "constructor",
      "moduleId": "27f789c6-c96b-4bf0-be54-faf9dfac8afa",
      "stem": "Where are dependencies typically injected in an Angular application?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "59f5ec0e-8870-4123-98ea-271a6561f20f",
      "clipId": "db441462-678f-4107-9550-3a1b8785ff32",
      "clipTitle": "Organizing Features",
      "distractors": [
        "ng make component my-feature",
        "ng make feature my-feature",
        "ng generate feature my-feature"
      ],
      "key": "ng generate component my-feature",
      "moduleId": "e8e1aa51-fdc5-4d60-a41c-cbadf51b5d01",
      "stem": "What Angular CLI command can be used to generate an initial application feature?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "df5a9e08-7cb8-4dd5-8aa2-5fa820fae250",
      "clipId": "07001aea-50ca-4082-980d-3c1561dd752a",
      "clipTitle": "Defining the Metadata with a Decorator",
      "distractors": [
        "Define the name of the component class",
        "Identify the part of the import statement that specifies the path",
        "Configure the component's route"
      ],
      "key": "Define the name of the component when used as a directive/child component",
      "moduleId": "97fbb958-e828-4258-8fc0-531723bc5206",
      "stem": "What is the purpose of a component's selector?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "0f3d3cb0-625a-4498-9888-888b547854d0",
      "clipId": "4776ad56-bf14-4cf2-b837-f9a845ad955f",
      "clipTitle": "Introduction",
      "distractors": [
        "The children of a component-less route are never displayed.",
        "The children of a component-less route are only accessible to authorized users.",
        "The children of a component-less route are displayed in the parent's outlet."
      ],
      "key": "The children of a component-less route are displayed in an ancestor's outlet, not in the parent.",
      "moduleId": "0ed18e31-b781-4d28-b3dd-62315f13e861",
      "stem": "What is the key difference between a component-less parent route and a normal parent route?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "f70b6530-a84f-45b6-81d8-d44e6c4d68f4",
      "clipId": "3087750b-1748-46be-bbe5-03d2401cfdee",
      "clipTitle": "A Conceptual Overview of Angular",
      "distractors": ["SystemJS", "Dependency Injection", "ES2015 Modules"],
      "key": "Angular Modules",
      "moduleId": "141673c4-d889-4f3b-91fd-e7190fed0544",
      "stem": "Which of the following is used as a container for components, services, directives, etc.?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "65781636-397b-4e8a-b0b5-271670192895",
      "clipId": "3881b95d-a625-480d-9173-6c834c2ffc27",
      "clipTitle": "Angular vs. Other Frameworks",
      "distractors": [
        "You use a relational database",
        "You can't use cookies",
        "You use a non-relational database"
      ],
      "key": "You use a typed language on the backend",
      "moduleId": "1fa20f1f-12ac-4ef5-a97b-c757417f4259",
      "stem": "There are several conditions where you should consider using Angular for your front end framework. Which of the following is one of those conditions?",
      "stemImageUrl": null,
      "courseId": "7c8fb1e8-044d-4067-9928-0ab7e25863f0"
    },
    {
      "questionId": "e74eca7a-cb3d-49e3-941d-b96dad70d612",
      "clipId": "0014bc8c-9207-48d8-9b96-c0ca7fc80b0b",
      "clipTitle": "Accessing Feature Routes",
      "distractors": [
        "Welcome route, product module routes, wild card route",
        "Welcome route, wild card route, product module routes"
      ],
      "key": "Product module routes, welcome route, wild card route",
      "moduleId": "361d549a-ed67-4e41-8af7-f4a3b9d19773",
      "stem": "In what order are the following routes matched?\r\n\r\n\r\n    imports: [\r\n      BrowserModule,\r\n      RouterModule.forRoot([\r\n        { path: 'welcome', component: WelcomeComponent },\r\n        { path: '**', component: PageNotFoundComponent }\r\n      ]),\r\n      ProductModule                          \r\n     ]",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "db7edeef-87f2-459d-93a8-5713cbdbd171",
      "clipId": "faa9d038-3310-4bb9-8256-86ab488b1b29",
      "clipTitle": "Using RxJS Operators",
      "distractors": ["Callback", "Handler", "Promise", "HttpClient"],
      "key": "Observable",
      "moduleId": "4bd0d46c-f530-4162-adfe-21f4d54cdbe8",
      "stem": "What type do most RxJS operators return?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "d37558fb-a176-490b-bf01-bf178a17be8e",
      "clipId": "e4c42446-50de-45b5-bff9-1ecf2d25aa06",
      "clipTitle": "Getting Started with the CLI",
      "distractors": [
        "Npm install angular in a new project and run npm run init-angular",
        "Clone the angular seed project at: github.com/angular/angular2-seed project"
      ],
      "key": "Use the Angular CLI to run: ng new [project name]",
      "moduleId": "27ecb73c-349c-4013-9077-455274fb42f8",
      "stem": "What is the recommended way to create a new Angular project?",
      "stemImageUrl": null,
      "courseId": "8525a84d-8923-43d7-b752-6fa8d94b2a0a"
    },
    {
      "questionId": "7148ea0a-126a-457f-acf4-e04e1d2ce02c",
      "clipId": "b0a9876a-d123-4d06-b2c2-d7702ff74793",
      "clipTitle": "Adding Your First Route",
      "distractors": [
        "Use the `<router-view>` component.",
        "They always appear just inside the `<body>` tag of your index.html.",
        "Use `*ngSwitch` to display the appropriate component based on the url."
      ],
      "key": "Use the `<router-outlet>` component.",
      "moduleId": "b9a77cb3-6aa9-4986-a455-f072f3f78486",
      "stem": "How do you specify where your routed components will appear in your application?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "2f7d3f70-2c77-4b04-9d05-41d192d6c13e",
      "clipId": "80b3bcb0-ed9a-40fd-a463-7df0270263e3",
      "clipTitle": "Configuring Routes",
      "distractors": [
        "A method of the `AppModule`",
        "A method of the `AppComponent`",
        "A method of the routed component"
      ],
      "key": "A method of the `RouterModule`",
      "moduleId": "23871e4f-5427-4d6f-bf61-cc52804911a1",
      "stem": "Route definitions are configured in an array passed to:",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "f52cc713-7765-454e-8cd5-7b2294be26a4",
      "clipId": "c9c00075-acd3-42d7-8672-9df748c4744b",
      "clipTitle": "Folder Structure",
      "distractors": [
        "Don't use any folder structure until it's absolutely necessary",
        "Group by layer (/templates/, /business-logic/, etc)",
        "Group files of the same type together (/components/, /services/, etc)"
      ],
      "key": "Use feature-based folders (/users/,  /catalog/, etc)",
      "moduleId": "27ecb73c-349c-4013-9077-455274fb42f8",
      "stem": "What is the recommended folder structure for Angular apps?",
      "stemImageUrl": null,
      "courseId": "8525a84d-8923-43d7-b752-6fa8d94b2a0a"
    },
    {
      "questionId": "bc942ac7-c72a-4a11-ad0f-f81a8187e4e4",
      "clipId": "58d369fa-6445-47fd-96cb-6bbf411be7cf",
      "clipTitle": "HTML5 Field Validation",
      "distractors": [
        "Use the required class",
        "Use the ngRequired class",
        "Fields are required by default",
        "Use the ngRequired attribute"
      ],
      "key": "Use the HTML required attribute",
      "moduleId": "40a161c7-66c5-48b7-9262-4f707923ee11",
      "stem": "In template-driven forms, how would you mark a field as required?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "04e20851-ece4-4f19-86d5-a64d8395461d",
      "clipId": "7ce6ef0c-cb64-4d6d-92e7-eac092f29161",
      "clipTitle": "Setting up for Integrated Tests",
      "distractors": [
        "Creating mock child components",
        "Integrating HTTP with Tests",
        "Creating utilities for mocking services"
      ],
      "key": "Mimicking a Live Environment for Components",
      "moduleId": "d131dbcc-ed36-4832-a6c3-3796f1347bf2",
      "stem": "What is the TestBed used for?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "45572a95-dad8-4dfd-918b-ba2e8fff8a2d",
      "clipId": "a0200ed6-8ac5-4ce5-b49c-f1e1b8a1e5ed",
      "clipTitle": "Using an Event Bus Service",
      "distractors": ["Child", "Endpoint", "Parent"],
      "key": "Middleman",
      "moduleId": "cadef368-dfae-45dd-92ef-b322e4526d7b",
      "stem": "An \"event bus\" acts as the ______ between components.",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "a16cb8b6-1b83-4b8b-8368-eb76550b7d26",
      "clipId": "df0e791c-b6fa-4d43-a93f-d3f73b0eff55",
      "clipTitle": "Using Angular's InjectionToken",
      "distractors": ["The Token class", "A string"],
      "key": "A class",
      "moduleId": "ce8b8c99-7d6c-49e5-a09d-58cb16cd9982",
      "stem": "What is the default token in Angular’s Dependency Injector?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "32dd03a9-fdd8-46e7-932a-953b738585f3",
      "clipId": "6f215b61-e50d-449e-b0cf-9dbcda6968fc",
      "clipTitle": "Mocking",
      "distractors": [
        "To improve the AAA setup of a test",
        "To improve readability of tests",
        "To create classes that are easier to test"
      ],
      "key": "To draw a boundary around a test",
      "moduleId": "eff0edc6-2c84-4c0a-8e62-247a82ee1c76",
      "stem": "What is the primary purpose of a mock?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "eb449308-cab5-47cf-b620-d1a0770628d3",
      "clipId": "d1586fb9-b8da-486d-b183-b1a539e49f82",
      "clipTitle": "NgRx",
      "distractors": [
        "Container + Presentation",
        "Event Bus + Observable Service",
        "Component + Service"
      ],
      "key": "Redux + RxJS",
      "moduleId": "2a309310-2abc-4070-b96c-e99e04fc4959",
      "stem": "NgRx is a state management solution that can be defined as:",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "736a4169-7c46-46d0-8567-19d7298cba59",
      "clipId": "d22c3acc-5346-4381-b3b5-ebed4f0db0cd",
      "clipTitle": "Posting a Form",
      "distractors": [
        "Call `observable.observe()`",
        "Call `observable.setTimeout()`",
        "Call `observable.start()`"
      ],
      "key": "Call `observable.subscribe()`",
      "moduleId": "ed29b1f4-cc14-4aa1-bbfb-64aa49f23633",
      "stem": "What must you do to an observable to start the asynchronous process?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "f1fc31d7-6997-4c00-be98-2503b6739d98",
      "clipId": "1e89d664-3314-4e9a-abf9-2c110d52e8bd",
      "clipTitle": "Testing Overview",
      "distractors": [
        "Two or more classes working closely together",
        "A single class",
        "A single tier"
      ],
      "key": "All of it",
      "moduleId": "eff0edc6-2c84-4c0a-8e62-247a82ee1c76",
      "stem": "An End to End test involves which part of the application?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "14f7bbaf-7abe-4201-8163-3fae3faab7b5",
      "clipId": "fee000ea-0e8f-449f-85d9-6b5998c0dd0b",
      "clipTitle": "HttpClient and RxJS Operators",
      "distractors": ["mergeMap()", "multi()", "map()"],
      "key": "forkJoin()",
      "moduleId": "f44c91c6-d10f-465d-b978-ea30b695db87",
      "stem": "What RxJS operator can be used to make multiple HTTP calls to a server in parallel and notify you when all of the calls have returned?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "483e134b-8685-4783-8d87-3cf975ef0dab",
      "clipId": "b963a7f7-01b9-456c-9552-0b1c556e48f2",
      "clipTitle": "Understanding RxJS Subjects",
      "distractors": ["ReplayObservable", "ReplayLast", "ReplayObserver"],
      "key": "ReplaySubject",
      "moduleId": "cadef368-dfae-45dd-92ef-b322e4526d7b",
      "stem": "Which type of RxJS object can be used to \"replay\" emitted data?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "0eba2d58-4773-4f88-8dfa-fbbe5611778a",
      "clipId": "975fa7d3-2439-4263-8b02-11388ed041cc",
      "clipTitle": "Sorting and Filtering Overview",
      "distractors": [
        "Mutable comparison",
        "Immutable comparison",
        "Deep value comparison",
        "Value comparison"
      ],
      "key": "Identity comparison",
      "moduleId": "3eb794e4-e1d8-46bb-b95f-0c11d2fa08f2",
      "stem": "When using the === operator on two objects, what type of comparison is used?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "1bc16699-dd3b-4eba-8285-dee81b06a937",
      "clipId": "112ae078-c985-4c3b-957a-cd9c36e26dc2",
      "clipTitle": "Defining Optional Route Parameters",
      "distractors": [
        "In a separate link parameters array only for optional parameters",
        "As a set of key and value pairs passed outside of a link parmeters array",
        "As additional entries in the link paramters array, one for each optional parameter"
      ],
      "key": "As a set of key and value pairs passed as a single entry in the link parameters array",
      "moduleId": "b2a3b4d8-dcbe-4426-a4db-01123b76f892",
      "stem": "How are optional route parameters populated?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "5b19a9be-d2fe-4a8b-8d60-54a582d4d8eb",
      "clipId": "9ae1778f-7d2c-47d9-8dfd-2bd279316dbc",
      "clipTitle": "Installing What We Need: npm",
      "distractors": [
        "Communicating with a backend server",
        "Running Angular on a backend server with node",
        "Deploying a completed Angular application"
      ],
      "key": "Instaling packages and executing scripts",
      "moduleId": "6eecf288-844b-4ca1-bc9d-8ce7cb4aa8e0",
      "stem": "You use `npm` in Angular for:",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "92945e69-901e-4dd3-b9b6-bc39d6041da7",
      "clipId": "c9f36e53-b69d-4eee-91c0-0ab8edd2f571",
      "clipTitle": "Testing Mock Calls",
      "distractors": [
        "To allow you to test your back end",
        "To allow you to arrange your tests easier",
        "To allow you to test Http calls"
      ],
      "key": "To place a boundary around tested code",
      "moduleId": "c2ccffae-3744-426c-9038-49c837be0691",
      "stem": "What is the purpose of a mock?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "53f17419-bc09-43ff-a286-0e35a1524971",
      "clipId": "1a3bcf7e-c9dc-419d-907b-657658157358",
      "clipTitle": "Activating a Route with Code",
      "distractors": ["`this.router.routerLink(['/welcome']);`", "`this.router(['/welcome']);`"],
      "key": "`this.router.navigate(['/welcome']);`",
      "moduleId": "361d549a-ed67-4e41-8af7-f4a3b9d19773",
      "stem": "Which of the following is the correct syntax for activating a route with code?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "afd992f0-50be-4858-a4f8-1018dce95b0a",
      "clipId": "d56036f8-9636-403f-be90-12164542bfd4",
      "clipTitle": "Writing Good Unit Tests",
      "distractors": [
        "They should be only synchronous",
        "They should test only one thing at a time",
        "They can utilize the TestBed"
      ],
      "key": "They can have some duplication between tests",
      "moduleId": "eff0edc6-2c84-4c0a-8e62-247a82ee1c76",
      "stem": "What does it mean for unit tests to be DAMP?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "ff3655c7-2c00-46ef-861f-888e8681d3b0",
      "clipId": "ff63952b-23c6-4ce3-9892-980acf467c40",
      "clipTitle": "Pure and Impure Pipe Performance",
      "distractors": [
        "Import the pipe in the component and call `formatAddress.evaluate()`whenever the `address` changes",
        "Use a separate pipe for each field of the address",
        "Use an impure pipe (`pure: false`)"
      ],
      "key": "Either don't use a pipe or use immutability when updating the pipe's inputs",
      "moduleId": "75861c6c-734c-418c-80af-adaf7c71fc92",
      "stem": "Given the following formatAddress pipe: `address | formatAddress`   \r\n  \r\nWhat would be the recommended way to force the `formatAddress` pipe to be re-evaluated if `address.city` property changes?",
      "stemImageUrl": null,
      "courseId": "8525a84d-8923-43d7-b752-6fa8d94b2a0a"
    },
    {
      "questionId": "e2b8808f-637b-4633-b19c-12998b469e80",
      "clipId": "7d00ae4b-0101-4f36-934d-00473e5a441c",
      "clipTitle": "Server-side Rendering",
      "distractors": [
        "native desktop rendering",
        "webpack optimization",
        "mobile application integration"
      ],
      "key": "initial response performance",
      "moduleId": "c9fb3ce6-dfc5-4fb7-8877-a3fa3f6cd9c5",
      "stem": "Which of the following is a benefit of server-side rendering?",
      "stemImageUrl": null,
      "courseId": "7c8fb1e8-044d-4067-9928-0ab7e25863f0"
    },
    {
      "questionId": "0843f355-46fd-4291-863e-3a44a91921fe",
      "clipId": "69837ac4-7bd1-48eb-a62e-9c248e4e85fc",
      "clipTitle": "Placing the Views",
      "distractors": [
        "Tie a user action to a route",
        "Define how the user activates a route",
        "Configure route parameters"
      ],
      "key": "Identify where to put the routed component's view",
      "moduleId": "23871e4f-5427-4d6f-bf61-cc52804911a1",
      "stem": "What is the purpose of the `RouterOutlet`directive?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "0e328910-1766-4ca1-bc32-1d0908b82312",
      "clipId": "d9583d68-bd08-4f7c-bb1f-830b4d6a5b1d",
      "clipTitle": "Symbol Naming Best Practices",
      "distractors": ["lower_snake_case", "UPPER_SNAKE_CASE", "PascalCase/UpperCamelCase"],
      "key": "camelCase",
      "moduleId": "099afa72-35ee-4f15-9f26-257b10c11665",
      "stem": "What is the recommended naming standard for classes such as components and services?",
      "stemImageUrl": null,
      "courseId": "8525a84d-8923-43d7-b752-6fa8d94b2a0a"
    },
    {
      "questionId": "19668058-a134-41f6-9440-d784be0460f4",
      "clipId": "975fa7d3-2439-4263-8b02-11388ed041cc",
      "clipTitle": "Sorting and Filtering Overview",
      "distractors": ["In a directive", "In a filter", "In a pipe"],
      "key": "In your component",
      "moduleId": "3eb794e4-e1d8-46bb-b95f-0c11d2fa08f2",
      "stem": "Where should you sort and filter data?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "2141b3e9-0a9d-404c-8609-69e8ed868ba7",
      "clipId": "3b462419-0496-4c29-b8de-f4e834042cbf",
      "clipTitle": "NativeElement vs. DebugElement",
      "distractors": [
        "A special DOM element that logs exceptions",
        "A pointer to an application exception",
        "A pointer to the latest error"
      ],
      "key": "A wrapper around a DOM node",
      "moduleId": "a5b15e41-2247-4484-9394-cac7792b9281",
      "stem": "What is a DebugElement?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "172efecb-6238-43a7-a449-7b4614047684",
      "clipId": "0597a20d-a2aa-4943-98b7-74f48e2895c2",
      "clipTitle": "Gotchas",
      "distractors": ["large", "functional", "static"],
      "key": "impure",
      "moduleId": "3d787678-c594-499c-b575-d21223224733",
      "stem": "Which type of pipe is dangerous?",
      "stemImageUrl": null,
      "courseId": "7c8fb1e8-044d-4067-9928-0ab7e25863f0"
    },
    {
      "questionId": "5c2efb93-6dd1-44e8-9883-a61e976ccb5a",
      "clipId": "20376269-1c50-44a0-985e-f5dd9155390e",
      "clipTitle": "Mobile & Native Frameworks",
      "distractors": ["Prettier & Ionic", "Webpack & Ionic", "Electron & Ionic"],
      "key": "NativeScript & Ionic",
      "moduleId": "c9fb3ce6-dfc5-4fb7-8877-a3fa3f6cd9c5",
      "stem": "What are the two tools commonly used to build Angular mobile apps?",
      "stemImageUrl": null,
      "courseId": "7c8fb1e8-044d-4067-9928-0ab7e25863f0"
    },
    {
      "questionId": "75dd9f47-bff8-4dbe-ba4d-98929c8527dd",
      "clipId": "a37b38e2-2b1b-404c-8311-bf7802fd6616",
      "clipTitle": "Using Lifecycle Hooks",
      "distractors": [
        "To tap into a template's lifecycle and control its DOM",
        "To tap into Angular's lifecycle and control how it renders components",
        "To tap into asynchronous Observable operations"
      ],
      "key": "To tap into a component's lifecycle and perform operations as needed",
      "moduleId": "2f317488-900b-4080-86cc-fee57f4ff08a",
      "stem": "What is the purpose of a lifecycle hook?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "0805a681-bdf4-441f-9466-9ebfe777813c",
      "clipId": "d55aecbb-de78-413c-be07-e356ec2c3b11",
      "clipTitle": "Form Directives",
      "distractors": [
        "You set the ngForm directive on the form element in the template.",
        "Angular automatically creates it for you.",
        "You set the ngModel directive on the form element in the template."
      ],
      "key": "You build it in the component class.",
      "moduleId": "43d126f7-b2dc-4bcd-a8de-23011f39d31a",
      "stem": "When building a form using the **Reactive approach**, how is the form model created?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "4b896a98-34c4-4a57-9dc0-e458fc283935",
      "clipId": "eb048c18-7d97-4c6f-8b87-44012245b537",
      "clipTitle": "Demo: Testing HTTP Errors",
      "distractors": ["`expect()`", "`sendResponseCode()`", "`fakeResponse()`", "`end()`"],
      "key": "`verify()`",
      "moduleId": "8929053b-ec03-4369-a0d8-88b56b437453",
      "stem": "What method on an HttpTestingController should be called at the end of each test?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "11f5500b-def3-498d-aa7e-f329c1bf0550",
      "clipId": "be62ed72-939a-4dae-be31-6cd5de4fd8d5",
      "clipTitle": "Using the @ViewChild Decorator",
      "distractors": [
        "To make custom \\* directives",
        "To add metadata for the children of a view"
      ],
      "key": "To get a handle on a DOM node decorated with a ref tag (#ref)",
      "moduleId": "e41c41b2-a54a-4eb5-acb6-e3fdf326c7e9",
      "stem": "What is the @ViewChild decorator used for?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "782fe3ff-28e5-442c-af65-cfcd49737255",
      "clipId": "a346728d-a642-46b5-a610-b6bb72e0aee0",
      "clipTitle": "The Role of Injectors",
      "distractors": ["`injectorConfig`", "`module`", "`emitPropertyInfo`", "`target`"],
      "key": "`emitDecoratorMetadata`",
      "moduleId": "27f789c6-c96b-4bf0-be54-faf9dfac8afa",
      "stem": "What TypeScript compiler option must be enabled to support Angular's dependency injection system?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "ae807078-1997-4a1c-9d31-9e6d3f02d689",
      "clipId": "f40db2a2-e5d7-4eed-af2e-8c1420cd701b",
      "clipTitle": "Filtering Data",
      "distractors": [
        "You specify the tag name when declaring the component in your Angular module.",
        "You set the tag property in the component meta-data config.",
        "You name the file that contains your component to match the tag name you want."
      ],
      "key": "You set the selector property in the component meta-data config.",
      "moduleId": "3eb794e4-e1d8-46bb-b95f-0c11d2fa08f2",
      "stem": "How do you specify the html tag (e.g. `<event-details>`) to use for a component?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "ab07f921-8090-46cf-9c39-6d67285e6d5a",
      "clipId": "defe6eac-8197-40fa-b35e-124c49bb9b73",
      "clipTitle": "Component Communication",
      "distractors": [
        "When you prefer to use output properties",
        "When you want to avoid input properties",
        "When you want more tightly-coupled communication"
      ],
      "key": "When you want extremely loosely coupled communication",
      "moduleId": "cadef368-dfae-45dd-92ef-b322e4526d7b",
      "stem": "When whould you use an Event Bus over an Observable Service?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "b8bed2a8-bebb-47ef-87fd-61577ac222be",
      "clipId": "4682bfc7-90b5-4b52-8500-52988a6f4570",
      "clipTitle": "Angular Extensions for VS Code",
      "distractors": [
        "This is an invalid command.",
        "Displays the files it would generate, but doesn't actually generate an app",
        "Generates a new app named my-dream-app and runs all steps"
      ],
      "key": "Generates a new app named my-dream-app and skips the `npm install` step",
      "moduleId": "33143d50-f2c9-43de-81af-5ec5c6fbfd49",
      "stem": "What does the command `ng new my-dream-app --skip-install` do?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "bc416973-bb5b-4540-9e2c-ef997073004e",
      "clipId": "4e426fed-c494-44ed-a0e8-a0eb00a46e0a",
      "clipTitle": "Exploring Angular's CSS Encapsulation",
      "distractors": [
        "Reference an external stylesheet from inside your component template html.",
        "Add the styles to a css file imported by your index.html.",
        "Add the styles inline inside your component template html."
      ],
      "key": "Specify the styles or styleUrls inside the component meta-data config.",
      "moduleId": "a87a58a8-e2c5-48f9-95f7-84397c8935ef",
      "stem": "What's the best way to add component-specific styles to a component?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "b526948d-f8da-45de-9281-14e5c9bd16bd",
      "clipId": "329bb3d9-9186-4683-ad82-b952449d0426",
      "clipTitle": "CanActivateChild Guard",
      "distractors": [
        "The canActivateChild guard only works with lazy loading.",
        "The canActivateChild guard must be built as a function.",
        "The canActivate guard cannot be configurated on a child route."
      ],
      "key": "The canActivate guard does **not **execute if only the child route changes.",
      "moduleId": "7193cc89-174d-4b6d-a053-0ac733b011a9",
      "stem": "What is the key difference between the canActivate and canActivateChild guards?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "5adaca4a-349b-4e2c-b2b7-f3d95a04f5b7",
      "clipId": "7d0cfb9b-4cc5-4821-a2b8-e281dbe4a198",
      "clipTitle": "Generating a Guard",
      "distractors": [
        "`ng g auth guard`",
        "Guards are not available in the Angular CLI.",
        "`ng g candeactivate auth`"
      ],
      "key": "`ng g guard auth`",
      "moduleId": "fb4a4fcf-5f2e-4daf-a946-551b9dd8b6b7",
      "stem": "What command creates a new routing guard?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "0b25028a-2a0a-41da-8f5c-adfd50a02dcb",
      "clipId": "1e89d664-3314-4e9a-abf9-2c110d52e8bd",
      "clipTitle": "Testing Overview",
      "distractors": [
        "The entire application",
        "A single module in Angular",
        "At least two classes working closely together"
      ],
      "key": "A single class",
      "moduleId": "eff0edc6-2c84-4c0a-8e62-247a82ee1c76",
      "stem": "Generally, what is considered a unit?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "c4db6ab9-6053-4190-9e47-293dc38b1068",
      "clipId": "4e49fea9-1626-4174-8976-8699c2d17337",
      "clipTitle": "Demo: Handling a Promise with async/await",
      "distractors": [
        "Before the name of the function in the declaration",
        "Before the line that instantiates a new promise",
        "After the success callback function",
        "Inside the function that creates the promise returned to the async function"
      ],
      "key": "Just before the function call that returns the promise",
      "moduleId": "63b87213-d5f3-43c1-888b-f55948f8b394",
      "stem": "Where do you place the \"await\" keyword when processing a promise?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "33342974-32ee-4167-bb72-ce38afb8b118",
      "clipId": "dec50e4b-b318-46ec-8718-015a18e6a67b",
      "clipTitle": "Data Access Service",
      "distractors": [
        "Communication between the components of the application",
        "A base class for each custom data access service"
      ],
      "key": "Communication with a backend Web server",
      "moduleId": "e34c82bc-f84e-4c98-9803-d59f5e433731",
      "stem": "The purpose of Angular's Http service is to provide:",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "fe017421-9c9a-4f2d-b3b1-1ed08a7d0ade",
      "clipId": "e920c3a5-7209-45d8-820b-da9637f02203",
      "clipTitle": "Provider Tokens and Recipes",
      "distractors": [
        "data type of the component",
        "imported NgModule name",
        "factory function name",
        "component property name"
      ],
      "key": "data type of the constructor parameter",
      "moduleId": "27f789c6-c96b-4bf0-be54-faf9dfac8afa",
      "stem": "What part of an injected dependency must match a provider token?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "9135c477-df3c-4d90-9f04-d6b33a3d5599",
      "clipId": "230c8529-c549-463a-8499-3411855b9f27",
      "clipTitle": "Styling Active Links",
      "distractors": [
        "Use a `[hidden]` binding to show and hide the appropriatly styled link based on the url.",
        "Use `*ngIf` to show and hide the appropriatly styled link based on the url.",
        "Use `*ngClass` to add the appropriate class based on the current url."
      ],
      "key": "Use the `routerLinkActive` directive to apply a class to the link.",
      "moduleId": "b9a77cb3-6aa9-4986-a455-f072f3f78486",
      "stem": "How can you style links on the page based on the currently active route?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "8ce80ef0-9709-4725-8f42-c3b08898ad50",
      "clipId": "2005a2e1-5871-4488-a50b-9a061e16faaf",
      "clipTitle": "Custom Validators",
      "distractors": [
        "Null if it is valid; otherwise an object with the name of the FormControl as the key and 'true' as the value.",
        "False if it is valid; otherwise true.",
        "True if it is valid; otherwise false."
      ],
      "key": "Null if it is valid; otherwise an object with the name of the validation rule as the key and 'true' as the value.",
      "moduleId": "5ac0688c-a15f-4da9-9019-5fdcea8d38ae",
      "stem": "What must be returned from a custom validator function?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "44548e88-c2be-46f9-a83f-37ee78efcf68",
      "clipId": "ff6c3a74-21e9-4bd4-8513-fd706cb282ab",
      "clipTitle": "Two-way Data Binding",
      "distractors": [
        "`(:ngModel:)=\"field\"`",
        "`ngModel=\"[(field)]\"`",
        "`ngModel=\"([field)]\"`",
        "`([ngModel])=\"field\"`"
      ],
      "key": "`[(ngModel)]=\"field\"`",
      "moduleId": "367f48b5-53ce-4da3-8236-8e45b8fd768e",
      "stem": "What syntax is used for two-way data binding in a form control?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "4ca464db-72b4-48c4-8671-9e7c4555d5ac",
      "clipId": "24c9c05f-d58b-471d-8751-1ac42febb115",
      "clipTitle": "Introduction",
      "distractors": [
        "The slots must be on the same horizontal.",
        "You can’t use them with TypeScript.",
        "There is a minimum of three slots.",
        "There is a maximum of three slots."
      ],
      "key": "The slots cannot exist outside of the parent's DOM tree.",
      "moduleId": "9881e453-9a71-4023-8818-dcf11147aebe",
      "stem": "What is a limitation of multiple slot content projection?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "f764a571-a77e-4bfd-ab57-c74f48166317",
      "clipId": "e1cdcfcb-352d-4a9e-ba3b-5bbbc9f5ebbc",
      "clipTitle": "Reactive Transformations",
      "distractors": [
        "It handles blur events, improving when required validation messages are displayed.",
        "It allows the user to enter a value and leave the element before validation begins."
      ],
      "key": "It allows the user to enter a value and pause before validation begins.",
      "moduleId": "fd2f2b95-8ee1-4e02-b9a2-b5946fb905f6",
      "stem": "How does debounceTime affect when validation error messages are displayed?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "b58bbeeb-254f-4945-a0fb-f670f3c3c375",
      "clipId": "428c1d26-0a5e-4a4a-a21d-81c8721c4313",
      "clipTitle": "The useExisting and useFactory Providers",
      "distractors": [
        "{ provide: MyService, useValue: MyService }",
        "{ provide: MyService, useExisting: MyService }",
        "{ provide: MyService, useConstructor: MyService }"
      ],
      "key": "{ provide: MyService, useClass: MyService }",
      "moduleId": "ce8b8c99-7d6c-49e5-a09d-58cb16cd9982",
      "stem": "Which of the following is the longhand version of typical service registration with a module?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "79417d69-6d29-4b14-9788-33b7fb3d4193",
      "clipId": "2f1c7ef2-bd58-453e-8919-8d7a16becc9e",
      "clipTitle": "One Way Data Flow",
      "distractors": [
        "Across each child, then each parent, then each grandparent, etc.",
        "From templates to components",
        "From child up to parent"
      ],
      "key": "From parent down to children",
      "moduleId": "ef9637a3-aa5b-42cd-a068-bf216ba15a3d",
      "stem": "Which way does \"One-Way Data Flow\" work?",
      "stemImageUrl": null,
      "courseId": "7c8fb1e8-044d-4067-9928-0ab7e25863f0"
    },
    {
      "questionId": "12c3b88f-cb91-47da-b83a-f539353b3f92",
      "clipId": "15859916-d8ca-4208-9523-102a5ab1a784",
      "clipTitle": "Configuring Secondary Routes",
      "distractors": [
        "RouterModule.forChild([\r\n          {\r\n              path: 'messages',\r\n              component: MessageComponent\r\n          }\r\n    ])",
        "RouterModule.forChild([\r\n          {\r\n              path: 'messages',\r\n              component: MessageComponent,\r\n              name: 'popup'\r\n          }\r\n    ])"
      ],
      "key": "RouterModule.forChild([\r\n          {\r\n              path: 'messages',\r\n              component: MessageComponent,\r\n              outlet: 'popup'\r\n          }\r\n    ])",
      "moduleId": "b9a688f9-94d7-4590-b04d-5429ad200698",
      "stem": "Which is the correct syntax for configuring a secondary route?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "a6dc78a9-7b89-47c3-8d79-fb1494ad0e34",
      "clipId": "29929ea0-6cbe-4b47-866f-19ba2962592b",
      "clipTitle": "Passing Parameters to a Route",
      "distractors": [
        "In a `parameters` property",
        "In a `params` property",
        "As part of the `component`property"
      ],
      "key": "As part of the `path` property",
      "moduleId": "093074bd-a2a4-48a6-b024-74ecd1c0805c",
      "stem": "How are required parameters identified in the route configuration?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "5b19b8f9-3b05-4c18-b7e6-95e9ed4cd2ba",
      "clipId": "30ad862f-1f6e-4141-9038-8db4cc672ec4",
      "clipTitle": "Demo: Creating a Service with the Angular CLI",
      "distractors": ["`npm service`", "`npm start`", "`ng serve`", "`ng new`"],
      "key": "`ng generate`",
      "moduleId": "1492c1eb-4ae2-42e2-a9a4-184958760ad4",
      "stem": "What is the name of the Angular CLI command used to create a new service?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "b211afac-ffd8-4a7c-ad19-980c04549d11",
      "clipId": "aa4605c3-e38e-4128-8771-28fb55c40da4",
      "clipTitle": "Serving the Application (ng serve)",
      "distractors": [
        "Build the application for deployment, deploy the application to the server, and launch it from that server.",
        "Start up all of the Angular services.",
        "Deploy the application to the server."
      ],
      "key": "Compile the application, launch the development server, and listen for changes.",
      "moduleId": "2e20883c-416f-4a3b-9ddf-0ed159fd6956",
      "stem": "What is the purpose of the Angular CLI `ng serve` command?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "d2630f03-8663-4592-aae3-e8238a98bdc0",
      "clipId": "7443cb93-388f-4d23-af48-4edc94400155",
      "clipTitle": "Pre-loading Data for Components",
      "distractors": ["Common", "Core", "Http"],
      "key": "RxJS",
      "moduleId": "b9a77cb3-6aa9-4986-a455-f072f3f78486",
      "stem": "Which library contains the Observable class?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "8e1f3be4-0d97-4925-8a35-000d4cc5beb2",
      "clipId": "1788d846-dd65-47f6-9d80-37bae2e5af0a",
      "clipTitle": "Using the waitForAsync Helper Function",
      "distractors": ["It requires extra setup", "It doesn't work with promises", "It is slow"],
      "key": "It cannot be used with `setTimeout`",
      "moduleId": "44ff37a7-b195-4be4-a681-8dfbb6f53559",
      "stem": "What is a drawback of the async function?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "5aa621a6-2c9b-4b9f-bbd6-3c164dd43895",
      "clipId": "d1586fb9-b8da-486d-b183-b1a539e49f82",
      "clipTitle": "NgRx",
      "distractors": ["Components", "Services", "Replayers"],
      "key": "Actions",
      "moduleId": "2a309310-2abc-4070-b96c-e99e04fc4959",
      "stem": "What is a key building block of NgRx?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "416a70b1-3f86-4d64-8892-129afa3ca99c",
      "clipId": "5c9d009d-3c50-42f2-900f-fddd7c975f2a",
      "clipTitle": "Using an Observable   ",
      "distractors": [
        "Defines a map object with key and value pairs containing the HTTP response",
        "Passes additional data to the server with the http request",
        "Formats the Url passed into the get method"
      ],
      "key": "Transforms the raw HTTP response to an array of products",
      "moduleId": "1f67c7ef-9988-4fba-819e-9d9d1645bb1b",
      "stem": "What does the generic parameter in this code do?\r\n\r\n\r\n    this.http.get<IProduct[]>(this.productUrl)",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "9377aea2-453c-4198-a541-7de955513d8a",
      "clipId": "975fa7d3-2439-4263-8b02-11388ed041cc",
      "clipTitle": "Sorting and Filtering Overview",
      "distractors": [
        "Those features are implemented in other pieces of the framework.",
        "To keep the download size small"
      ],
      "key": "They can become performance issues.",
      "moduleId": "3eb794e4-e1d8-46bb-b95f-0c11d2fa08f2",
      "stem": "Why does angular not ship with a filterBy or orderBy pipe?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "8c2822b0-62bd-4fd7-95cb-832be2e68ba7",
      "clipId": "a55c08a8-ae31-480c-9dd1-4704ded76ea3",
      "clipTitle": "The Angular CLI",
      "distractors": [
        "create a GitHub pull request",
        "integrate with electron",
        "display code for debugging"
      ],
      "key": "linting your code",
      "moduleId": "c9fb3ce6-dfc5-4fb7-8877-a3fa3f6cd9c5",
      "stem": "The CLI can do which of the following?",
      "stemImageUrl": null,
      "courseId": "7c8fb1e8-044d-4067-9928-0ab7e25863f0"
    },
    {
      "questionId": "d0493e2f-a602-4f1c-8fde-824c84b61258",
      "clipId": "7a6d2964-e4cf-4abe-b350-2ab814333ff6",
      "clipTitle": "Organizing Services",
      "distractors": ["decorator", "provide", "helper", "system"],
      "key": "core",
      "moduleId": "27f789c6-c96b-4bf0-be54-faf9dfac8afa",
      "stem": "What is the recommended name of the module commonly created to provide application-wide services?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "6ac8fecc-d398-4c53-96a9-d88ec1d68fbd",
      "clipId": "06c4c2a4-f6ec-487a-a806-2cd7c3720243",
      "clipTitle": "Retrieving Data for Select Elements",
      "distractors": [
        "`<option *ngFor=\"let o of objs\" async=\"true\">`",
        "`<option *ngForAsync=\"let o of objs\">`",
        "`<option *ngFor=\"let o of objs\" async>`"
      ],
      "key": "`<option *ngFor=\"let o of objs | async\">`",
      "moduleId": "ed29b1f4-cc14-4aa1-bbfb-64aa49f23633",
      "stem": "You need to wait for an observable to resolve before populating options in a select list.  Which syntax should be used for the opening option tag?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "e9c11dbc-4e64-4874-9081-de47c1b444cd",
      "clipId": "db441462-678f-4107-9550-3a1b8785ff32",
      "clipTitle": "Organizing Features",
      "distractors": [
        "Create a custom folder structure for each application",
        "Model-based approach",
        "Convention-based approach"
      ],
      "key": "Feature-based approach",
      "moduleId": "e8e1aa51-fdc5-4d60-a41c-cbadf51b5d01",
      "stem": "What technique is recommended for organizing your Angular code?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "a759d410-dc30-493f-920f-050123d6bd69",
      "clipId": "89fe5d57-f841-4960-977d-ec13a40861d4",
      "clipTitle": "Passing Data to a Nested Component Using @Input",
      "distractors": [
        "Set default values for interpolation",
        "Pass input to a container using property bindings",
        "Define an input element on a form"
      ],
      "key": "Expose a property that a container can set using property binding",
      "moduleId": "e9cd157d-39d8-4efd-a558-04644b972188",
      "stem": "The purpose of the `@Input` decorator in a nested component is to:",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "bdffbea3-e636-4dfe-990a-845cc34cc2a8",
      "clipId": "a015842b-6312-4c39-be48-5320bfbb8acd",
      "clipTitle": "Using Bootstrap for Styling",
      "distractors": ["`input-group`", "`control-group`", "`input-control`"],
      "key": "`form-control`",
      "moduleId": "e7717840-39cd-4b96-85c6-f0875084c1a4",
      "stem": "When styling a form using Bootstrap 4, which class should be applied to an element containing a label and input control?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "f57987b7-13d9-41c5-a1a7-c44d62b3ed78",
      "clipId": "60ceba53-c708-4a05-ab3e-dd159a1d29f0",
      "clipTitle": "Defining and Providing Interceptors",
      "distractors": [
        "http-protocol-check",
        "forward-requests-for-client",
        "INTERCEPT_REQUESTS",
        "HTTP_CATCH"
      ],
      "key": "HTTP_INTERCEPTORS",
      "moduleId": "55e63a75-3152-4eb2-aa9a-07debb59174f",
      "stem": "What is the name of the \"provide\" token used to provider interceptors?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "d207b3ef-d8e9-4e7b-b07f-78e1228fd3a6",
      "clipId": "84d79c8c-11b7-402e-a33c-6362f6a55043",
      "clipTitle": "Injecting the Service",
      "distractors": [
        "In the component decorator",
        "In the `Import`statement",
        "In the class signature"
      ],
      "key": "In the class constructor",
      "moduleId": "daa589d7-8f11-4e2b-a1e5-eaffb664722c",
      "stem": "A class wants to use a service. Where do you define the dependency for the injected service?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "de041291-8dad-4544-b77e-cb000d549129",
      "clipId": "b0a9876a-d123-4d06-b2c2-d7702ff74793",
      "clipTitle": "Adding Your First Route",
      "distractors": [
        "You don't need to make the router aware of them, declaring them as the data type \"Routes\" is sufficient.",
        "Import your routes file using a `<script>` tag in your `index.html`.",
        "Add the routes array to the declarations section of your module."
      ],
      "key": "Use RouterModule.forRoot or RouterModule.forChild in your Angular module.",
      "moduleId": "b9a77cb3-6aa9-4986-a455-f072f3f78486",
      "stem": "Once you have defined routes, how do make the router aware of them?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "80626b5c-093a-45d0-a3aa-b7e6cf666926",
      "clipId": "94654d7d-21ae-4094-b764-093950a2944a",
      "clipTitle": "Component Member Sequence",
      "distractors": [
        "Put private members directly above the public members that use them",
        "Put private members directly below the public members that use them",
        "Put private members above public members"
      ],
      "key": "Put public members above private members",
      "moduleId": "fe3763c7-78bc-4fc2-825d-026465c17259",
      "stem": "What is the recommended ordering for component members?",
      "stemImageUrl": null,
      "courseId": "8525a84d-8923-43d7-b752-6fa8d94b2a0a"
    },
    {
      "questionId": "94ab97e0-6f70-4a7d-bd0d-40fb26d104b3",
      "clipId": "21db32e5-3fcd-41cf-9701-15a66cad44b9",
      "clipTitle": "Introduction",
      "distractors": [
        "Multiple values in the present",
        "A single value in the present",
        "Multiple values in the future"
      ],
      "key": "A single value in the future",
      "moduleId": "1b3c48f6-c404-4bc4-8040-cfb93cf1342b",
      "stem": "A promise represents what?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "94ddb217-40ee-40a6-821c-ee63c21001d7",
      "clipId": "8b834f23-f605-4c2a-a858-ada01bd88911",
      "clipTitle": "Generating and Exploring a New App",
      "distractors": [".editorconfig", "tsconfig.json", "package.json", "angular-config.json"],
      "key": "angular.json",
      "moduleId": "33143d50-f2c9-43de-81af-5ec5c6fbfd49",
      "stem": "Which file stores the Angular CLI's configuration?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "e1c97a15-b703-427a-b1a2-d71d3ed82578",
      "clipId": "7b0b4b90-d9b4-4fef-b901-c7ead178ff55",
      "clipTitle": "Guarding Against Route Activation",
      "distractors": [
        "Check the condition in the component's ngOnint method.",
        "Create a route resolver and use the \"resolve\" property of the component's route.",
        "Check the condition in the component's constructor."
      ],
      "key": "Create a route guard and use the \"canActivate\" property of the component's route.",
      "moduleId": "b9a77cb3-6aa9-4986-a455-f072f3f78486",
      "stem": "What is the best way to prevent a component from being loaded based on specific conditions?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "1a386363-d33f-4e8e-91c4-aff06c73bc12",
      "clipId": "31f41bff-fae3-494c-b0ec-fd8f3e0a746a",
      "clipTitle": "Generating NgModules",
      "distractors": [
        "Modules must be created by hand.",
        "`ng g component module`",
        "`ng g ngmodule admin`"
      ],
      "key": "`ng g m admin`",
      "moduleId": "089192a5-2c90-41cc-9310-23064ed77d24",
      "stem": "What command will create a new angular module?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "d71ea692-9237-4290-8885-677adcebf25f",
      "clipId": "1dfdbf8a-1056-4b95-90e8-6751ae569fba",
      "clipTitle": "Preparing for Lazy Loading",
      "distractors": [
        "{\r\n         path: 'products',\r\n         loadChildren: [ ProductModule ]\r\n      }",
        "{\r\n         path: 'products',\r\n         children: [ ProductModule ]\r\n      }",
        "{\r\n         path: 'products',\r\n         children: () =>\r\n              import('./products/product.module').then(m => m.ProductModule)\r\n      }"
      ],
      "key": "{\r\n         path: 'products',\r\n         loadChildren: () =>\r\n              import('./products/product.module').then(m => m.ProductModule)\r\n      }",
      "moduleId": "6e6697ee-e137-4015-81c0-561254badafa",
      "stem": "What is the correct syntax for lazy loading a route?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "db19e23b-e589-4898-8df1-d037959be433",
      "clipId": "9c6b1eeb-390b-4e88-be43-8b20261b2016",
      "clipTitle": "Ahead-of-time Compilation and the CLI",
      "distractors": [
        "ng serve --aot (npm start -- --aot)",
        "ng build (npm run build)",
        "ng serve --prod (npm start -- --prod)"
      ],
      "key": "ng build --prod (npm run build -- -- prod)",
      "moduleId": "75861c6c-734c-418c-80af-adaf7c71fc92",
      "stem": "Which of the following Angular CLI commands creates a deployable production build?",
      "stemImageUrl": null,
      "courseId": "8525a84d-8923-43d7-b752-6fa8d94b2a0a"
    },
    {
      "questionId": "92f7d027-f33d-4a37-b62e-162b49e3461f",
      "clipId": "4e744095-6b77-47b6-a81e-0435f2904c01",
      "clipTitle": "Validating Reactive Forms",
      "distractors": [
        "Create a custom directive that provides the validation and add that directive to the element.",
        "Create a validation function and call it when the form is submitted.",
        "Bind to the html element's \"change\" event and validate the entry each time it changes."
      ],
      "key": "Create a function and pass that function as a validator in the control's validators array.",
      "moduleId": "380399e3-a6b6-489f-9aa7-b2ba26ff03a1",
      "stem": "What's the best way to create and use a custom validator with reactive forms?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "458d81a4-a94f-467f-8f48-6557d6044151",
      "clipId": "d6bdaad5-dee8-4e9e-b95c-2f15dd0d73c1",
      "clipTitle": "The NgModule Blueprint with Routing",
      "distractors": [
        "`sales.module.ts` and `routing.module.ts`",
        "`sales.module.ts` and `sales.component.ts`",
        "`sales.module.ts`"
      ],
      "key": "`sales.module.ts` and `sales-routing.module.ts`",
      "moduleId": "fb4a4fcf-5f2e-4daf-a946-551b9dd8b6b7",
      "stem": "What file(s) will the command `ng g m sales --routing` create?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "45f4f8c1-935b-476c-a873-a52588c27464",
      "clipId": "71f07210-8b2c-4f66-831d-814e29342bfe",
      "clipTitle": "Core and Shared in Action",
      "distractors": ["@PreventLoad, @LoadOnce", "@OnRoot, @LoadOnce", "@Optional, @LoadOnce"],
      "key": "@Optional, @SkipSelf",
      "moduleId": "e8e1aa51-fdc5-4d60-a41c-cbadf51b5d01",
      "stem": "What decorators can be used together to prevent CoreModule from being imported more than once?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "2dcd045b-bada-49de-a32b-c7fa00ae368e",
      "clipId": "4c3c1b13-a58e-4b89-9ffa-846e147a96d8",
      "clipTitle": "Serving Angular",
      "distractors": [
        "In the `/out` folder",
        "The Angular CLI cannot serve files.",
        "In the `/dist` folder"
      ],
      "key": "In memory",
      "moduleId": "ce92dad9-37bc-4418-b070-102f5e17c9ee",
      "stem": "When serving Angular with `ng serve` using the Angular CLI, where are the built/compiled files stored?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "37839afd-79ee-42b9-81b0-7d516a815b1a",
      "clipId": "f5b1819b-edc5-4e86-9f9c-8328c9173736",
      "clipTitle": "Adding Logic with Directives: ngFor",
      "distractors": [
        "`*ngFor=let product in products`",
        "`*ngFor='let product in products'`",
        "`ngFor=let product of products`"
      ],
      "key": "`*ngFor='let product of products'`",
      "moduleId": "9cd0eae6-c6cc-4ca7-ba8c-780ea2b2bb42",
      "stem": "Which of the following is correct syntax for the \\*`ngFor` directive?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "72d7f712-1a13-482e-b1b6-e791ac5b9d9c",
      "clipId": "a2752987-674c-466b-ac8c-30f278896c80",
      "clipTitle": "What Is a Component?",
      "distractors": [
        "Template + Bindings + Directive",
        "Template + Module + Directive",
        "Template + UI + Class"
      ],
      "key": "Template + Class + Metadata",
      "moduleId": "97fbb958-e828-4258-8fc0-531723bc5206",
      "stem": "What is an Angular component?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "dd20f55d-fc74-4e1d-b39f-dc2a6fc438c2",
      "clipId": "e61f487e-176e-4b2b-91f5-81916a02fd69",
      "clipTitle": "Angular's Form Technologies",
      "distractors": ["Browser-based Forms", "Spec Driven Forms", "Template Driven Forms"],
      "key": "Reactive Forms",
      "moduleId": "0d48f5e9-fd17-47ac-aec3-a51d531e9bc9",
      "stem": "Which Angular form technology is best if thorough unit testing is required?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "29339283-5ecd-483d-a60a-7a92a3fecb45",
      "clipId": "16b3b37a-f42c-46b7-b3df-1dfb16ba20a1",
      "clipTitle": "Introduction",
      "distractors": ["Filtering Data", "Registering services with DI", "Sorting Data"],
      "key": "Formatting data",
      "moduleId": "3eb794e4-e1d8-46bb-b95f-0c11d2fa08f2",
      "stem": "What functionality do pipes support?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "7319b790-7f24-482d-bb7e-cb6f1afdcf03",
      "clipId": "bf942dba-f0b3-4623-b8c5-fc71ce5121d5",
      "clipTitle": "Core and Shared Modules",
      "distractors": [
        "Feature components",
        "Services",
        "Singleton items that are only instantiated once"
      ],
      "key": "Multi-instance items that may be reused across the application",
      "moduleId": "e8e1aa51-fdc5-4d60-a41c-cbadf51b5d01",
      "stem": "What items should be stored in the \"shared\" folder?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "69d57527-5bf8-4aab-813a-24cb729dc70c",
      "clipId": "fe8058c5-8d5a-4f59-a0a8-cad13655fd7b",
      "clipTitle": "Creating the Component Class",
      "distractors": [
        "Define the template needed by the view",
        "Provide services to the application",
        "Define the route configuration to navigate to the view"
      ],
      "key": "Provide the properties and methods needed by the view",
      "moduleId": "97fbb958-e828-4258-8fc0-531723bc5206",
      "stem": "The purpose of a component's class is to:",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "508932b5-12ac-4786-9cfe-97195567c0a2",
      "clipId": "a68f767f-2c39-496d-baf8-998b032a5eb6",
      "clipTitle": "Angular's Default Unit Testing Tools",
      "distractors": ["HttpFake", "RequestMocker", "HttpCache", "HttpBackStop"],
      "key": "HttpClientTestingModule",
      "moduleId": "8929053b-ec03-4369-a0d8-88b56b437453",
      "stem": "What class provides backend services for HTTP unit tests?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "11bc1e04-8181-46ad-a2b5-49d6ad32f64f",
      "clipId": "a029e515-f3c0-42a6-8453-3cf3872f79f2",
      "clipTitle": "Creating Your First Template-based Form",
      "distractors": [
        "You can't edit data using two-way bindings.",
        "You can't have multiple validators on a field.",
        "You can't validate the values entered into the form fields."
      ],
      "key": "You can't unit-test your validation logic.",
      "moduleId": "380399e3-a6b6-489f-9aa7-b2ba26ff03a1",
      "stem": "Which of the following is a limitation of using template based forms?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "63d1e07f-c625-4d2d-886d-4cfdc8a5a973",
      "clipId": "9c24ed10-0ae7-4ab4-995e-b8a906c0690a",
      "clipTitle": "Promises",
      "distractors": ["`new()`", "`error()`", "`broken()`", "`success()`"],
      "key": "`then()`",
      "moduleId": "63b87213-d5f3-43c1-888b-f55948f8b394",
      "stem": "What function do you call on a Promise to register the callbacks that will process it?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "dc056ea6-3aa2-4793-a3b5-7f976a613d00",
      "clipId": "1a3bcf7e-c9dc-419d-907b-657658157358",
      "clipTitle": "Activating a Route with Code",
      "distractors": [
        "The `navigate()` method always navigates to external routes, outside of the Angular application.",
        "The `navigateByUrl()` method always navigates to external routes, outside of the Angular application.",
        "The `navigate()` method clears all other Url segments."
      ],
      "key": "The `navigateByUrl()` method clears all other Url segments.",
      "moduleId": "361d549a-ed67-4e41-8af7-f4a3b9d19773",
      "stem": "What is the difference between the router `navigate()` method and the `navigateByUrl()` method?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "4e33c370-76ce-4e7f-a9a1-679f5e22123d",
      "clipId": "c1410dbf-c01c-4c4e-bc87-dece88c8b73c",
      "clipTitle": "Angular's FormsModule",
      "distractors": ["HttpClientModule", "CommonModule", "ReactiveFormsModule"],
      "key": "FormsModule",
      "moduleId": "e7717840-39cd-4b96-85c6-f0875084c1a4",
      "stem": "Which Angular module needs to be imported in order for template-driven forms to work?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "09029a46-14d8-40fd-adbc-1d140f6fe693",
      "clipId": "d2208e94-435d-4d37-af7c-b3426f046c57",
      "clipTitle": "Demo: Retrieving a Collection",
      "distractors": ["Http200", "NgRest", "HttpCurl", "NetworkConsumer"],
      "key": "HttpClient",
      "moduleId": "4bd0d46c-f530-4162-adfe-21f4d54cdbe8",
      "stem": "What built-in Angular class is used to make HTTP requests?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "a176c3f7-d17b-466b-ad04-db2c769f2d6f",
      "clipId": "0d6c9389-a733-4b83-a101-58fffbac060d",
      "clipTitle": "What Is an Angular Module?",
      "distractors": [
        "Create any file that is not a class",
        "Define a class with a Module decorator",
        "Import or export something from the class"
      ],
      "key": "Define a class with an `NgModule`decorator",
      "moduleId": "11d66aca-fd35-4f51-bd0a-36abf26e63c2",
      "stem": "How do you define an Angular module?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "668d6a54-c0d9-4f47-98bd-0357d86e7f4c",
      "clipId": "728a1cc2-26f0-46ab-9d15-4e5f37a55ae3",
      "clipTitle": "Building a Template",
      "distractors": ["`linkedTemplate`", "`selector`", "`template`"],
      "key": "`templateUrl`",
      "moduleId": "9cd0eae6-c6cc-4ca7-ba8c-780ea2b2bb42",
      "stem": "How is a linked template specified in the component metadata?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "79524591-3eaf-4524-af11-de8e53f1d0f6",
      "clipId": "20736b6a-c21e-4616-8c51-2d38ad5aa92a",
      "clipTitle": "Using @Input Setters",
      "distractors": ["To validate the value of an Input", "To create a read-only input value"],
      "key": "To created a derived value on an Input value",
      "moduleId": "e2bb5e1f-7379-4ee6-85ec-f0cf482e3d81",
      "stem": "Why would you use a setter on an @Input directive?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "fd81479f-e72c-4721-8c49-52d2453b11f0",
      "clipId": "937e0e71-1358-466e-a37b-4bf8cde5dcbb",
      "clipTitle": "HTTP Interceptors",
      "distractors": [
        "Intercept HttpClient cookies",
        "None of the above",
        "Intercept a single HTTP request (one-time)"
      ],
      "key": "Provide access to all requests/responses",
      "moduleId": "f44c91c6-d10f-465d-b978-ea30b695db87",
      "stem": "What is the purpose of an HTTP Interceptor?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "92a2c770-3623-4efa-8438-e8c0834bf9a7",
      "clipId": "d22c3acc-5346-4381-b3b5-ebed4f0db0cd",
      "clipTitle": "Posting a Form",
      "distractors": [
        "A promise for success and a promise for failure",
        "A success or fail function, and  an exception handler",
        "A function to execute immediately and a completion function"
      ],
      "key": "A success function and an error function",
      "moduleId": "ed29b1f4-cc14-4aa1-bbfb-64aa49f23633",
      "stem": "When calling `subscribe()` on an observable, what are the first two arguments?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "02b44d0f-b584-4e07-9784-61983dc8df88",
      "clipId": "2a943631-1495-4eeb-891e-ca6ab7f3b894",
      "clipTitle": "Defining a Named Router Outlet",
      "distractors": [
        "`<router-outlet outlet=\"popup\"></router-outlet>`",
        "`<router-outlet secondary=\"popup\"></router-outlet>`",
        "`<router-outlet></router-outlet>`"
      ],
      "key": "`<router-outlet name=\"popup\"></router-outlet>`",
      "moduleId": "b9a688f9-94d7-4590-b04d-5429ad200698",
      "stem": "Which of these is an outlet for a secondary route?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "786ad793-4c36-4964-b5e0-f5abf2885d61",
      "clipId": "24c9c05f-d58b-471d-8751-1ac42febb115",
      "clipTitle": "Introduction",
      "distractors": ["Allow content to be shown in an overlay", "Improve performance"],
      "key": "Create reusable components with replaceable content",
      "moduleId": "9881e453-9a71-4023-8818-dcf11147aebe",
      "stem": "What is the main purpose of content projection?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "66cf2fca-5b69-4225-aee9-af9a3b61a2f8",
      "clipId": "21db32e5-3fcd-41cf-9701-15a66cad44b9",
      "clipTitle": "Introduction",
      "distractors": [
        "Multiple values in the future",
        "Multiple values at a predetermined time",
        "Multiple values now"
      ],
      "key": "Multiple values now or in the future",
      "moduleId": "1b3c48f6-c404-4bc4-8040-cfb93cf1342b",
      "stem": "An Observable represents what?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "76af7b4f-63e1-43e5-a04d-c2732c1c3bea",
      "clipId": "21db32e5-3fcd-41cf-9701-15a66cad44b9",
      "clipTitle": "Introduction",
      "distractors": ["They are more performant.", "They are simpler."],
      "key": "They can handle a stream of data instead of just one value.",
      "moduleId": "1b3c48f6-c404-4bc4-8040-cfb93cf1342b",
      "stem": "What is one advantage of RxJS over Promises?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "d5d62ed1-c2e5-44b5-a358-f6834951c838",
      "clipId": "0db19f87-b9c6-464f-ad13-0a59aaecc15a",
      "clipTitle": "Caching with Interceptors",
      "distractors": [
        "To examine HTTP headers",
        "To store unit tests",
        "To store items in a third-party service",
        "It is required by the dependency injection system"
      ],
      "key": "To provide a data structure for the cached items",
      "moduleId": "d7a36cf0-5937-450b-bd6c-58cdd3f75236",
      "stem": "What is the primary role of an Angular service created as part of an interceptor caching solution?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "bd5c78c9-4dd9-4f9a-aaa6-d03e2f187aa4",
      "clipId": "6700489e-c71c-46b2-a590-694aaea28999",
      "clipTitle": "Route Path Naming Strategies",
      "distractors": [
        "Use a common prefix on the root path name to identify their feature: productList, productDetail/:id",
        "Use differing root path names so the paths are easily distinguishable: products, details/:id"
      ],
      "key": "Use a common root path name, specifying the same first segment for each path: products, products/:id",
      "moduleId": "361d549a-ed67-4e41-8af7-f4a3b9d19773",
      "stem": "What is the suggested naming strategy for feature route configuration paths?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "8127df97-9ac4-482d-a9dc-2360cf5754d9",
      "clipId": "0e7e2af3-4da8-41f2-be09-c647c5467370",
      "clipTitle": "Retrieving Data with Resolvers",
      "distractors": [
        "During the application's bootstrap sequence",
        "After the new component has loaded",
        "Before button click handlers are processed",
        "After all HTTP requests complete"
      ],
      "key": "Before a new route is activated",
      "moduleId": "0422dad7-c41b-4849-93d5-5791e520a280",
      "stem": "When do resolvers execute during a route transition?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "8434214e-ecd3-4e2a-b06e-41684e1cd110",
      "clipId": "59c96da4-2ad9-423e-a21d-fa0b50c81bc2",
      "clipTitle": "Repeating Data with ngFor",
      "distractors": ["`event in events`", "`event of events`", "`let event in events`"],
      "key": "`let event of events`",
      "moduleId": "7686a42c-9648-4392-98ef-c6f1938be823",
      "stem": "Which of the following is a valid \\*ngFor expression?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "271b2e1b-6c76-4155-b346-9c87fe97456a",
      "clipId": "f19f759f-6266-4671-81a8-1ce4c826cbb1",
      "clipTitle": "Using NO_ERRORS_SCHEMA",
      "distractors": [
        "Log any errors while testing",
        "Ignore errors in your JSON schema",
        "Hide any errors while testing"
      ],
      "key": "Ignore unknown elements and attributes",
      "moduleId": "a5b15e41-2247-4484-9394-cac7792b9281",
      "stem": "What does the NO_ERRORS_SCHEMA do?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "df4a1d35-7991-4844-b1ab-c9ef2174135b",
      "clipId": "36330fa6-9085-4dcd-8d22-a63ff8fbefd8",
      "clipTitle": "Using Child Routes",
      "distractors": [
        "To display routed component templates **from feature modules**",
        "To display routed component templates **as a tree view** on a page",
        "To display routed component templates **side by side with **other routed component templates"
      ],
      "key": "To display routed component templates **within **other routed component templates",
      "moduleId": "ce45e68b-2862-40ff-ada9-315d2f49b5b9",
      "stem": "What is the purpose of child routes?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "1011dc00-90fd-411e-ae57-14795cd9d6d4",
      "clipId": "4b564854-b3c2-4b99-a415-d092632f6fa9",
      "clipTitle": "Creating Shared Modules",
      "distractors": ["A Feature Module", "The App Module", "The Core Module"],
      "key": "A Shared Module",
      "moduleId": "d4c4584b-aec9-4d07-a76d-6adecf43e8a1",
      "stem": "Which type of module should provide should be used to declare components that can be shared with other modules?",
      "stemImageUrl": null,
      "courseId": "8525a84d-8923-43d7-b752-6fa8d94b2a0a"
    },
    {
      "questionId": "033614f4-1af3-47fd-988f-2a1a4351f6e3",
      "clipId": "4b39868b-98dc-4504-95ae-d008c208398c",
      "clipTitle": "Property Binding",
      "distractors": [
        "Two-way binding between a class property and an HTML element property",
        "One-way binding, passing data from an HTML element property to a class property",
        "One-way binding, sending an event notification to a class property"
      ],
      "key": "One-way binding, passing data from a class property to an HTML element property",
      "moduleId": "84d6d5db-2f3d-4f1e-8278-7d9029236920",
      "stem": "Property binding is:",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "727b06ab-908b-4d61-9421-0ea6b47f2d78",
      "clipId": "3d108bdb-48b5-4fe9-bf83-543a74d0bd59",
      "clipTitle": "Custom Validation with Parameters",
      "distractors": [
        "Add the parameters before the AbstractControl parameter.",
        "Pass the parameters through the constructor.",
        "Add the parameters after the AbstractControl parameter."
      ],
      "key": "Wrap the function in a factory function and pass the parameters to it.",
      "moduleId": "5ac0688c-a15f-4da9-9019-5fdcea8d38ae",
      "stem": "Given a validator function as shown below, what changes are required to pass in validation parameters, such as a rating range?\r\n\r\n\r\n    function ratingRange(c: AbstractControl): {[key: string]: boolean} | null {\r\n      . . . \r\n    };",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "19c1d05b-49a8-46c7-939a-f3156109897d",
      "clipId": "fc8401e9-571a-4f42-ae23-b23cad90b7a5",
      "clipTitle": "Tools of Unit Testing with Angular",
      "distractors": ["There are no defaults", "Karma & Mocha", "Mocha & Jasmine"],
      "key": "Karma & Jasmine",
      "moduleId": "eff0edc6-2c84-4c0a-8e62-247a82ee1c76",
      "stem": "What two tools are the default testing tools with Angular?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "a1b6dda7-2325-4863-a939-a5410720cd59",
      "clipId": "b469726b-33b8-4ef4-b7d4-822b3c91eae9",
      "clipTitle": "Observables",
      "distractors": ["`success()`", "`first()`", "`error()`", "`then()`"],
      "key": "`subscribe()`",
      "moduleId": "63b87213-d5f3-43c1-888b-f55948f8b394",
      "stem": "What function do you call on an Observable to register the callbacks that will process it?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "42ed517b-eaf3-4943-ad25-74aabb23bfbe",
      "clipId": "7a202473-f286-43d0-9fd0-224f80f697be",
      "clipTitle": "Parts of a Service",
      "distractors": ["Core", "Service", "NgModule", "Component"],
      "key": "Injectable",
      "moduleId": "1492c1eb-4ae2-42e2-a9a4-184958760ad4",
      "stem": "What is the name of the decorator conventionally added to all Angular services?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "a5d6524a-0c4f-47fd-95b8-673eb3fc3737",
      "clipId": "95004c66-e761-431c-85bf-0b045cc1303c",
      "clipTitle": "Handling HTTP Errors",
      "distractors": ["`fallThrough`", "`exception`", "`retry`", "`handleError`"],
      "key": "`catch`",
      "moduleId": "0422dad7-c41b-4849-93d5-5791e520a280",
      "stem": "What RxJS operator can be chained to an Observable to handle errors?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "4587799c-d301-4309-aa43-591b3462b354",
      "clipId": "b7a360bb-bf26-4466-846e-7869bcf34364",
      "clipTitle": "Installing and Using ngx-bootstrap",
      "distractors": [
        "NPM package prime-faces-bootstrap",
        "Angular Material",
        "Angular's AngularBootstrapModule"
      ],
      "key": "NPM package ngx-bootstrap",
      "moduleId": "fde4a0e1-ecd7-42b1-8e51-752de528a991",
      "stem": "If you need form controls to look and feel like Bootstrap 4 controls, which technoogy is an option?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "e75316ee-8670-457a-aae7-ebce52cf4b0f",
      "clipId": "c0d7bff7-9f64-4db0-8fed-caa5bfce3a2a",
      "clipTitle": "Creating an Event Bus Service",
      "distractors": ["Sibling bus", "Input property", "Output property"],
      "key": "Event bus",
      "moduleId": "cadef368-dfae-45dd-92ef-b322e4526d7b",
      "stem": "You have two sibling components on a dashboard that need to talk with each other. What \"loosely coupled\" option can be used in this scenario?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "ae6dbf59-6449-4630-b727-9384ebf08ec9",
      "clipId": "1f414601-57c0-4916-8414-65d48cec39b6",
      "clipTitle": "Handling Null Values with the Safe-Navigation Operator",
      "distractors": [
        "Use the `*` operator on any object that could be null.",
        "You don't need to worry about null objects, Angular will handle them gracefully.",
        "In the component, ensure the objects are never null."
      ],
      "key": "Use the `?` operator on any object that could be null.",
      "moduleId": "7686a42c-9648-4392-98ef-c6f1938be823",
      "stem": "When binding to data in templates, how do you avoid issues with binding to properties of null or undefined objects?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "07d3cd43-4afe-48cf-beb1-fb7a6f0dcb50",
      "clipId": "3973cfc4-4182-4ec6-9bf1-5bcf1cce63c9",
      "clipTitle": "Watching Routing Events",
      "distractors": [
        "`RouterModule.forRoot([...], { displayEvents: true })`",
        "`RouterModule.forRoot([...], { enableEvents: true })`",
        "`RouterModule.forRoot([...], { displayTracing: true })`"
      ],
      "key": "`RouterModule.forRoot([...], { enableTracing: true })`",
      "moduleId": "77f5ce93-9faa-43b3-9e7e-1dd622d45074",
      "stem": "What is the syntax for turning on display of routing events?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "843bd672-131f-404c-bf50-80da4c8aed38",
      "clipId": "7fcc8a14-c777-41f4-b65e-015095cc804a",
      "clipTitle": "Using the fakeAsync Helper Function",
      "distractors": ["`createComponent()`", "`configureTestingModule()`", "`async()`"],
      "key": "`fakeAsync()`",
      "moduleId": "44ff37a7-b195-4be4-a681-8dfbb6f53559",
      "stem": "Which function is used with `tick()` and `flush()` when testing asynchronous code?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "d9ab8436-a0cd-4252-b169-2967ba825c15",
      "clipId": "16b3b37a-f42c-46b7-b3df-1dfb16ba20a1",
      "clipTitle": "Introduction",
      "distractors": ["None of these", "Working with RxJS", "Working with Promises"],
      "key": "Sorting & Filtering Data",
      "moduleId": "3eb794e4-e1d8-46bb-b95f-0c11d2fa08f2",
      "stem": "What functionality do Angular 1 filters have that is missing from Pipes?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "a950cc8c-419b-4fdc-9318-42e3e40ce7fc",
      "clipId": "dec50e4b-b318-46ec-8718-015a18e6a67b",
      "clipTitle": "Data Access Service",
      "distractors": [
        "It greatly improves performance of the http requests.",
        "Angular requires each application to have a custom data access service to use Angular's built-in Http service."
      ],
      "key": "It keeps the data access logic out of the components and makes it more reusable across components.",
      "moduleId": "e34c82bc-f84e-4c98-9803-d59f5e433731",
      "stem": "Why build a data access service?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "8d008f7b-8f4f-4fec-8496-7bc556245e13",
      "clipId": "fcc3e960-a52b-4657-9a3d-728565347cde",
      "clipTitle": "What is a REST Service?",
      "distractors": [
        "Create, RAM, uint, and downtime",
        "Caller, reader, user, and dealer",
        "Carrier, read, uptime, and delete",
        "Call, random, update, and decimal"
      ],
      "key": "Create, read, update, and delete",
      "moduleId": "4bd0d46c-f530-4162-adfe-21f4d54cdbe8",
      "stem": "What do the letters in the acronym CRUD represent?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "4bd6b11f-6e50-4f43-9a52-e9cccd87d36b",
      "clipId": "6630af7f-67be-446d-8601-3563bf7d07c8",
      "clipTitle": "Styling Forms with Validation Errors",
      "distractors": [
        "`<div hidden=\"expression\">`",
        "`<div visible=\"expression\">`",
        "`<div opacity=\"expression\">`",
        "`<div [visible]=\"expression\">`"
      ],
      "key": "`<div [hidden]=\"expression\">`",
      "moduleId": "40a161c7-66c5-48b7-9262-4f707923ee11",
      "stem": "How would you show or hide an error message based on the value of some expression?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "8d9bb91b-71c0-4a09-b557-db6c25d91c5a",
      "clipId": "5bf82598-1aac-4cd0-86d9-64c9cbc24e65",
      "clipTitle": "Building a Route Resolver Service",
      "distractors": [
        "`implements Resolve: Product`",
        "`implements Resolve[Product]`",
        "`implements Resolve()`"
      ],
      "key": "`implements Resolve<Product>`",
      "moduleId": "ad109302-ba92-4047-a6fa-91393a48b733",
      "stem": "Which is the correct syntax for implementing the Resolve generic interface to retrieve products defined with `Product`?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "538fe714-3a0d-4a69-b9cd-a596545cd23f",
      "clipId": "339f9567-b35c-4c4b-8e63-89e7d06ca619",
      "clipTitle": "What Are Interceptors?",
      "distractors": ["HandleRequest", "InterceptCall", "RequestResponse", "HttpCatch"],
      "key": "HttpInterceptor",
      "moduleId": "55e63a75-3152-4eb2-aa9a-07debb59174f",
      "stem": "What is the name of the interface that Angular interceptors implement?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "a0cf49ee-017c-4452-a8a8-02ba1d728398",
      "clipId": "3b462419-0496-4c29-b8de-f4e834042cbf",
      "clipTitle": "NativeElement vs. DebugElement",
      "distractors": [
        "A wrapper around a DOM object",
        "The instance of the component",
        "The HTML element"
      ],
      "key": "The underlying DOM object",
      "moduleId": "a5b15e41-2247-4484-9394-cac7792b9281",
      "stem": "What does the `nativeElement` property expose?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "9d53cc8d-a634-4610-8640-86f4ccd9688e",
      "clipId": "428c1d26-0a5e-4a4a-a21d-81c8721c4313",
      "clipTitle": "The useExisting and useFactory Providers",
      "distractors": [
        "When you are using a custom service",
        "When you want multiple instances of a service"
      ],
      "key": "When you need to parameterize the construction of a service",
      "moduleId": "ce8b8c99-7d6c-49e5-a09d-58cb16cd9982",
      "stem": "When would you use the useFactory provider method?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "e1278a0b-d189-44ae-9206-6bc7a75720f2",
      "clipId": "bd6d099c-937d-41b6-9277-9ac5e9a3bce3",
      "clipTitle": "Form Building Blocks",
      "distractors": ["FormControl and FormModel", "ngForm and ngModel", "ngModel and ngGroup"],
      "key": "FormControl and FormGroup",
      "moduleId": "43d126f7-b2dc-4bcd-a8de-23011f39d31a",
      "stem": "Angular has two key building blocks that define a form model. What are they?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "37fe2aeb-bc50-4b7a-a265-b6bdec06ef93",
      "clipId": "1151dbd1-76e7-4ea0-ae86-36f81817cbc4",
      "clipTitle": "Feature Modules",
      "distractors": [
        "Multiple modules are added to the feature",
        "There is no benefit of a feature defining its own routes",
        "Routes are spread throughout the application"
      ],
      "key": "The feature is self-contained",
      "moduleId": "e8e1aa51-fdc5-4d60-a41c-cbadf51b5d01",
      "stem": "What is a benefit of features defining their own routes?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "41b98141-6396-45dc-9e6b-bca57c2a20d9",
      "clipId": "7797e1c5-9296-4a88-b6a8-bd794944c2c9",
      "clipTitle": "Using the inject Helper Function",
      "distractors": [
        "`MockTestingController`",
        "`MockHttpTestingController`",
        "`MockHttpController`"
      ],
      "key": "`HttpTestingController`",
      "moduleId": "09d707d2-59c1-4f80-9dc4-66bfb6715dfe",
      "stem": "Which class provides a handle to control built-in HTTP request mocking?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "8654b306-8526-4ca9-82e5-deff37002644",
      "clipId": "74b48f79-9894-4365-bbdf-01f20e163b5d",
      "clipTitle": "Cross-field Validation: Custom Validator",
      "distractors": [
        "Add `emailMatcher` after the FormControls in the group.\r\n\r\n\r\n    emailGroup: this.fb.group({\r\n       email: ['', Validators.required],\r\n       confirmEmail: ['', Validators.required]\r\n     }, emailMatcher )",
        "Add `emailMatcher`as a validator for each FormControl in the group.\r\n\r\n\r\n    emailGroup: this.fb.group({\r\n       email: ['', [Validators.required, emailMatcher]],\r\n       confirmEmail: ['', [Validators.required, emailMatcher]]\r\n     })"
      ],
      "key": "Add `{validator: emailMatcher}` after the FormControls in the group.\r\n\r\n\r\n    emailGroup: this.fb.group({   email: ['', Validators.required],   confirmEmail: ['', Validators.required] }, {validator: emailMatcher} )",
      "moduleId": "5ac0688c-a15f-4da9-9019-5fdcea8d38ae",
      "stem": "What is the correct syntax for adding an `emailMatcher` validator to this FormGroup?\r\n\r\n\r\n    emailGroup: this.fb.group({\r\n       email: ['', Validators.required],\r\n       confirmEmail: ['', Validators.required]\r\n     })",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "48129c9e-d98a-4d6d-9726-844c98a9aea7",
      "clipId": "35115f81-7e9d-4ac1-9d2c-0b830c34449e",
      "clipTitle": "Angular CLI JSON File",
      "distractors": ["--module-routing", "--add all", "--module"],
      "key": "--routing",
      "moduleId": "5a5848db-3718-4b5b-9768-d53dfa64582a",
      "stem": "Which `ng new` flag instructs the Angular CLI to generate an NgModule with routing?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "08670305-b8ac-4a15-85ea-185ef6b23821",
      "clipId": "c7531e80-acc2-4635-ad7b-85a8b85220c0",
      "clipTitle": "The Template",
      "distractors": [
        "To bind an input element to its FormControl defined in the component class",
        "To group a set of elements in the form template",
        "To create and group multiple forms on a single page."
      ],
      "key": "To bind the form element to the root FormGroup defined in the component class",
      "moduleId": "c0fc9c74-66df-4fcf-8da2-05bd6af19a99",
      "stem": "What is the purpose of the formGroup directive?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "519c4b50-cae2-40fa-8a82-f060d8579ae2",
      "clipId": "7326c680-479b-4052-8844-1cf74751502b",
      "clipTitle": "Using a Nested Component",
      "distractors": [
        "When data is received from a service",
        "When the value of any data-bound property changes",
        "When an Observable emits a value"
      ],
      "key": "When the value of a data-bound `@Input` property changes",
      "moduleId": "e9cd157d-39d8-4efd-a558-04644b972188",
      "stem": "When does the `OnChanges`lifecycle event occur?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "a8e3f2db-f388-4ff8-b650-e6ee8e027ff0",
      "clipId": "c0ab9487-c97b-4167-88e0-b5b87df74ca2",
      "clipTitle": "Testing a Component",
      "distractors": ["A Module", "`ngOnInit`", "The TestBed"],
      "key": "None",
      "moduleId": "c8a81c99-3773-4685-a4a8-7feae45e2ea6",
      "stem": "When constructing a component for an isolated test, what special utility do you use?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "31c4b9a1-f02a-4c18-a930-42f96c698cc1",
      "clipId": "4509a3cf-35e7-4597-b52b-d80832e98896",
      "clipTitle": "Using NgForm",
      "distractors": [
        "Using a template reference variable for the form",
        "Using <ngForm> instead of <form>",
        "Using the ngForm attribute"
      ],
      "key": "Importing FormsModule into your root module",
      "moduleId": "367f48b5-53ce-4da3-8236-8e45b8fd768e",
      "stem": "What is required for Angular to become aware of and monitor a <form> element?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "a35083df-db05-419a-97f1-8973c9cff5f5",
      "clipId": "c1beb137-ab2b-490d-8b99-257ecf69b89c",
      "clipTitle": "Summary",
      "distractors": ["`subscribe()`", "`insert()`", "`save()`", "`get()`"],
      "key": "`post()`",
      "moduleId": "4bd0d46c-f530-4162-adfe-21f4d54cdbe8",
      "stem": "What method would you call on the HttpClient to create a new resource on the server?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "8b8b6a9c-4d6f-473a-a9cf-01685b92cccb",
      "clipId": "95004c66-e761-431c-85bf-0b045cc1303c",
      "clipTitle": "Handling HTTP Errors",
      "distractors": ["Angular routes", "jQuery", "RxJS", "Angular components"],
      "key": "Angular services",
      "moduleId": "0422dad7-c41b-4849-93d5-5791e520a280",
      "stem": "Where is it considered a best practice to encapsulate your HTTP requests?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "f974d72f-e2af-4c4a-905e-fddfa433f1c1",
      "clipId": "1b982a89-fe39-4b9e-af46-8f8d86b4c80a",
      "clipTitle": "Directives",
      "distractors": [
        "Format display of data",
        "Provide different views based on the URL",
        "Group visual display with functionality"
      ],
      "key": "Add new capabilities to HTML elements",
      "moduleId": "ef9637a3-aa5b-42cd-a068-bf216ba15a3d",
      "stem": "What do directives do?",
      "stemImageUrl": null,
      "courseId": "7c8fb1e8-044d-4067-9928-0ab7e25863f0"
    },
    {
      "questionId": "ab92fb99-f2f9-43a4-8489-98047db46721",
      "clipId": "03c7f92d-5c8c-44fb-97bf-13e41d0106b6",
      "clipTitle": "Checkboxes and Radios",
      "distractors": [
        "Wrap them in a div or other grouping element",
        "Use the \\*ngFor to generate each radio\" button",
        "Set the id attribute to the same value"
      ],
      "key": "Set the name attribute to the same value",
      "moduleId": "e7717840-39cd-4b96-85c6-f0875084c1a4",
      "stem": "When building radio button controls into a form, how do you link them together so they act as a single control?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "6090fffc-a8e9-424b-b0fa-7baa8f960e2f",
      "clipId": "b469726b-33b8-4ef4-b7d4-822b3c91eae9",
      "clipTitle": "Observables",
      "distractors": ["Function", "Module", "Callback", "Promise"],
      "key": "Observable",
      "moduleId": "63b87213-d5f3-43c1-888b-f55948f8b394",
      "stem": "What type is returned from a GET request made with the built-in HTTP client?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "22672b05-a995-4bcc-afeb-7223fdf381ae",
      "clipId": "b0dad4ac-d6ee-46cb-af03-3d08201cd7ce",
      "clipTitle": "Delivering Services to Components",
      "distractors": ["\"this\" property", "type guards", "enums", "modules"],
      "key": "constructors",
      "moduleId": "1492c1eb-4ae2-42e2-a9a4-184958760ad4",
      "stem": "Injectors inject services into what part of a class?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "a1aeb5a9-3485-485c-b493-1801609ec40d",
      "clipId": "7b0b4b90-d9b4-4fef-b901-c7ead178ff55",
      "clipTitle": "Guarding Against Route Activation",
      "distractors": [
        "Create a route resolver and use the \"resolve\" property of the component's route.",
        "Check the condition in the component's ngCanDeactivate method.",
        "Check the condition inside links and buttons that would navigate away from the component."
      ],
      "key": "Create a route guard and use the \"canDeactivate\" property of the component's route.",
      "moduleId": "b9a77cb3-6aa9-4986-a455-f072f3f78486",
      "stem": "What is the best way to prevent a user from leaving a component based on specific conditions?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "38ef27ec-ddd7-4f77-81ae-c6474de56b0a",
      "clipId": "07001aea-50ca-4082-980d-3c1561dd752a",
      "clipTitle": "Defining the Metadata with a Decorator",
      "distractors": ["Annotation", "Directive", "Attribute"],
      "key": "Decorator",
      "moduleId": "97fbb958-e828-4258-8fc0-531723bc5206",
      "stem": "A function that adds metadata to a class, its members, or its method arguments is a(n):",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "d6eae3a2-cc32-4060-a4e4-92a381c4cbd9",
      "clipId": "403a7bd3-b90e-4cca-ad1f-465b16937606",
      "clipTitle": "Introduction",
      "distractors": ["Mocked & TestBed", "Mocked & Functional", "Deep & End to End"],
      "key": "Deep & Shallow",
      "moduleId": "d131dbcc-ed36-4832-a6c3-3796f1347bf2",
      "stem": "What are the two types of Integrated tests?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "0cfa122b-8442-4276-a2c4-d296a62e1e94",
      "clipId": "e01c4095-729a-4a91-b6fe-2729feb15f1b",
      "clipTitle": "Functions vs. Pipes",
      "distractors": ["Properties", "Services", "Components"],
      "key": "Pipes",
      "moduleId": "f44c91c6-d10f-465d-b978-ea30b695db87",
      "stem": "Function calls made from a template can be replaced with _____ in many cases?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "2bd592b4-27d5-41f7-8241-1f3bef2beaab",
      "clipId": "1151dbd1-76e7-4ea0-ae86-36f81817cbc4",
      "clipTitle": "Feature Modules",
      "distractors": ["Shared", "Application", "Core"],
      "key": "Root",
      "moduleId": "e8e1aa51-fdc5-4d60-a41c-cbadf51b5d01",
      "stem": "Feature modules must be imported into the ______ module.",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "8229c2a7-840f-4da3-ac32-bd8f4c64c511",
      "clipId": "47de4075-0bc4-4e49-a3c5-16df2a90201c",
      "clipTitle": "How Does It Work?",
      "distractors": [
        "A coding technique for registering services",
        "A coding technique in which all dependencies are defined with import statements",
        "A coding pattern in which all related components are nested in a container component."
      ],
      "key": "A coding pattern in which a class receives the instances of objects it needs from an external source",
      "moduleId": "daa589d7-8f11-4e2b-a1e5-eaffb664722c",
      "stem": "What is dependency injection?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "a0218c98-831e-4225-8409-2582176b0356",
      "clipId": "ddee1e60-e47b-4f55-a2bc-b8511e7d129e",
      "clipTitle": "Angular CLI Overview",
      "distractors": [
        "Testing and deploying Angular applications",
        "Executing, testing, and debugging Angular applications.",
        "Installing and running Angular applications."
      ],
      "key": "Building, executing, testing, and deploying Angular applications",
      "moduleId": "2e20883c-416f-4a3b-9ddf-0ed159fd6956",
      "stem": "What is the purpose of the Angular CLI?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "959958b3-46f6-4cd5-827d-88045ecab716",
      "clipId": "bdbace4d-ba53-4158-91a5-104452a7e1b7",
      "clipTitle": "Binding with Interpolation",
      "distractors": ["`{{'pageTitle'}}`", "`{pageTitle}`", "`'{{pageTitle}}'`"],
      "key": "`{{pageTitle}}`",
      "moduleId": "9cd0eae6-c6cc-4ca7-ba8c-780ea2b2bb42",
      "stem": "Which of the following is correct Angular interpolation syntax?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "e097272e-38cd-4f92-95ee-bb89b76d790e",
      "clipId": "bb5e267e-4faf-42ab-90a6-79b2dfdc7b1a",
      "clipTitle": "Submitting Forms",
      "distractors": [
        "`<form #form (submit)=\"onSubmitHandler(form)\">`",
        "`<form #form (handleSubmit)=\"onSubmitHandler(form)\">`",
        "`<form #form (onSubmit)=\"onSubmitHandler(form)\">`"
      ],
      "key": "`<form #form (ngSubmit)=\"onSubmitHandler(form)\">`",
      "moduleId": "40a161c7-66c5-48b7-9262-4f707923ee11",
      "stem": "How would you set up a handler for the form submit event in Angular?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "c6ff0c48-7f7d-4f06-8f15-2920a775a43b",
      "clipId": "38b5ea40-04ed-4f22-b00a-6e28458b7d01",
      "clipTitle": "Passing State with Input and Output Properties",
      "distractors": ["HTML attribute", "Event bus", "Input property"],
      "key": "Output property",
      "moduleId": "240f0850-8c1e-4be2-86ee-5c3b9d93d1e9",
      "stem": "What technique is recommended to pass state from a child component to a parent component?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "6ae6d2ee-d398-472d-b21b-c511397a298d",
      "clipId": "554519a4-27af-4038-ac96-e9be633edce3",
      "clipTitle": "Create a FormArray",
      "distractors": [
        "A technique for displaying multiple forms within a template.",
        "A style class that you can use to style a group of related elements."
      ],
      "key": "A form building block used to manage a set of FormControls and FormGroups as an array.",
      "moduleId": "49309a7f-772a-4813-a9cf-c55eb6400ae1",
      "stem": "What is a FormArray?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "9227d130-cdcc-4865-9e08-5b85781d5db7",
      "clipId": "6b9d3bcb-8248-4e58-9dfa-1ea59853fb98",
      "clipTitle": "Loop Through the FormArray",
      "distractors": [
        "Loop through the `addresses`property of the data model and duplicate all of the elements within the inner `<div>` element",
        "Loop through each item in `addresses`and display each field of the address block"
      ],
      "key": "Loop through each item in a FormArray of addresses and duplicate all of the elements within the inner `<div>` element",
      "moduleId": "49309a7f-772a-4813-a9cf-c55eb6400ae1",
      "stem": "What does this code do?\r\n\r\n\r\n    <div formArrayName=\"addresses\"> \r\n      <div [formGroupName]=\"i\"\r\n           *ngFor=\"let address of addresses.controls; let i=index\">\r\n       ...\r\n      </div>\r\n    </div>",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "fdd0124c-b455-4d0f-bf49-e93e3d6eb778",
      "clipId": "c48e542b-0be4-44fa-bf1d-e39ef15a1b07",
      "clipTitle": "Angular's Ahead of Time Compiler",
      "distractors": ["Android Operating Types", "Assertion of Test", "Angular Offline Templates"],
      "key": "Ahead of Time",
      "moduleId": "7d758805-b99d-4c61-b5b0-45985af70a56",
      "stem": "What does AOT stand for?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "d705810c-3a87-4845-8149-c44c93a1ffbf",
      "clipId": "182ad5ac-60c7-4fed-86d1-6d3427a83714",
      "clipTitle": "Creating Your First Service",
      "distractors": [
        "Only when it is going to be injected into another service",
        "It is always required.",
        "Only when it is going to be injected into components"
      ],
      "key": "Only when the service also injects other services",
      "moduleId": "35618061-5a41-4ea5-9cdf-1f325647651f",
      "stem": "When is the `@Injectable()` decorator required on a service?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "b566f651-7900-4d36-a9e4-069e7b833289",
      "clipId": "d988b121-582f-4b87-99bb-62e4bdc987de",
      "clipTitle": "Using an Observable Service",
      "distractors": [
        "Top to bottom pattern",
        "Object communication pattern",
        "Abstract factory or Factory method pattern"
      ],
      "key": "Mediator or Observer pattern",
      "moduleId": "cadef368-dfae-45dd-92ef-b322e4526d7b",
      "stem": "What design patterns can be used to help with component communication in an Angular application?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "9b2137c4-4409-4795-988f-493d78037446",
      "clipId": "76d9283d-4fea-4b84-870c-e6c6d4a5f9bc",
      "clipTitle": "CanDeactivate Guard",
      "distractors": [
        "Check permissions before navigating away.",
        "Check that the new route is valid before navigating away.",
        "Check for unsaved changes or an incomplete operation before closing the browser."
      ],
      "key": "Check for unsaved changes or an incomplete operation before navigating away.",
      "moduleId": "7193cc89-174d-4b6d-a053-0ac733b011a9",
      "stem": "The primary purpose of the canDeactivate guard is to:",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "48bdfede-b2db-4221-b499-ff0e2308a7e0",
      "clipId": "ed835294-e72f-4c38-987f-0049b188fea0",
      "clipTitle": "Component-less Routes",
      "distractors": [
        "A route definition that specifies a child route",
        "A nested component that does not have an associated route",
        "A route definition that specifies a default route"
      ],
      "key": "A route definition that does not have a component associated with it",
      "moduleId": "0ed18e31-b781-4d28-b3dd-62315f13e861",
      "stem": "What is a component-less route?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "04278d4c-42a2-4912-ad53-78c5902181f8",
      "clipId": "1151dbd1-76e7-4ea0-ae86-36f81817cbc4",
      "clipTitle": "Feature Modules",
      "distractors": ["None of the above", "A feature pipe", "A feature service"],
      "key": "A feature module",
      "moduleId": "e8e1aa51-fdc5-4d60-a41c-cbadf51b5d01",
      "stem": "What should every feature have in the majority of cases?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "9fe6065a-c17e-446b-856a-73806a148696",
      "clipId": "87e4672a-da9c-4a6f-b3aa-c691b091a70f",
      "clipTitle": "Styling Components with ngClass",
      "distractors": ["Use a class binding.", "Use a style binding.", "Use `ngStyle`."],
      "key": "Use `ngClass`.",
      "moduleId": "7686a42c-9648-4392-98ef-c6f1938be823",
      "stem": "Which of these would you use to toggle applying multiple classes to an element?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "f8a21557-1faf-471d-8218-fe484aaa8ed2",
      "clipId": "6f200322-7461-4537-81da-ea2e1599d9c6",
      "clipTitle": "Observables and Reactive Extensions",
      "distractors": [
        "An event raised from a nested component",
        "A service injected into any class that needs it",
        "A special type of life-cycle hook"
      ],
      "key": "A stream whose items arrive asynchronously over time",
      "moduleId": "1f67c7ef-9988-4fba-819e-9d9d1645bb1b",
      "stem": "You could think of an observable as:",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "c993707e-4839-4192-bced-14f0df8e1d86",
      "clipId": "b963a7f7-01b9-456c-9552-0b1c556e48f2",
      "clipTitle": "Understanding RxJS Subjects",
      "distractors": ["AsyncSubject", "LastSubject", "Subject"],
      "key": "BehaviorSubject",
      "moduleId": "cadef368-dfae-45dd-92ef-b322e4526d7b",
      "stem": "What type of RxJS object would you use if you want to ensure subscribers always receive the last data value that was emitted?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "2cb3cb99-1296-492e-bc89-fc3e319a9cca",
      "clipId": "8116eae0-639e-42c9-8dc8-fa993f04f2d1",
      "clipTitle": "The Component Class",
      "distractors": [
        "As a second element of an array:\r\n\r\n\r\n    sendCatalog: [new FormControl(), true]",
        "As part of the key:\r\n\r\n`sendCatalog(true): new FormControl()`",
        "As a second argument:\r\n\r\n\r\n    sendCatalog: new FormControl(), true"
      ],
      "key": "In the FormControl constructor:\r\n\r\n\r\n    sendCatalog: new FormControl(true)",
      "moduleId": "c0fc9c74-66df-4fcf-8da2-05bd6af19a99",
      "stem": "In the following code, where could a default value be specified?\r\n\r\n\r\n    this.customerForm = new FormGroup({\r\n        firstName: new FormControl(),\r\n        sendCatalog: new FormControl()\r\n    });",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "1b62a9f0-bd66-4c5c-b180-379bf6f5d870",
      "clipId": "38f1df6c-6dc9-4a5d-97cc-e12766294c2d",
      "clipTitle": "Declarations Array",
      "distractors": [
        "The components that the module wants to expose to other modules",
        "The services that the module wants to provide",
        "The third-party modules used by the components owned by the module"
      ],
      "key": "The components, directives, and pipes owned by the module",
      "moduleId": "11d66aca-fd35-4f51-bd0a-36abf26e63c2",
      "stem": "What goes into an Angular module's `declarations`array?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "37845240-316f-46d8-9132-f987b7b2772d",
      "clipId": "db441462-678f-4107-9550-3a1b8785ff32",
      "clipTitle": "Organizing Features",
      "distractors": [
        "Lag should never, Impact the, Function, Timing",
        "Let, Info, Flow, Through",
        "Acronym used with JavaScript hoisting - Lift Initial, Functions, to the Top"
      ],
      "key": "Locate code quickly, Identify the code at a glance, keep the Flattest structure you can, and Try to be DRY",
      "moduleId": "e8e1aa51-fdc5-4d60-a41c-cbadf51b5d01",
      "stem": "What does the LIFT acronym stand for as defined in the Angular Style Guide?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "96f6f83a-58b9-4ebb-9212-c474fc61ffc2",
      "clipId": "9d3d7b20-98da-498f-bfb3-f264c68227bc",
      "clipTitle": "Encapsulating Component Styles",
      "distractors": [
        "Is defined inline",
        "Is automatically added as a link in index.html",
        "Only applies to all components declared in a module"
      ],
      "key": "Only applies to the component's template",
      "moduleId": "2f317488-900b-4080-86cc-fee57f4ff08a",
      "stem": "The benefit of encapsulating a component style is that the style:",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "7246d165-9d70-4e8f-a977-22da17eed326",
      "clipId": "06a8ac06-d6c5-41f8-948b-94e6b88a5a3a",
      "clipTitle": "Using Services for Data Retrieval",
      "distractors": [
        "In a pipe",
        "Anywhere in your application where you need the data",
        "In the component where the data is needed"
      ],
      "key": "In a custom data retrieval service",
      "moduleId": "8f366350-90fa-4577-bc80-d97dd65cf7bb",
      "stem": "Where is the recommended place to put data retrieval logic (such as http calls to an api)?",
      "stemImageUrl": null,
      "courseId": "8525a84d-8923-43d7-b752-6fa8d94b2a0a"
    },
    {
      "questionId": "d7add1c6-fcc0-4497-9f1f-04fb87722016",
      "clipId": "0d6c9389-a733-4b83-a101-58fffbac060d",
      "clipTitle": "What Is an Angular Module?",
      "distractors": [
        "To lay out the user interface components for your application",
        "To define the logic for your application",
        "To organize the application's services for the module's components"
      ],
      "key": "To define a template resolution environment for the module's components",
      "moduleId": "11d66aca-fd35-4f51-bd0a-36abf26e63c2",
      "stem": "What is the purpose of an Angular module?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "cdeb336d-ee66-4a6e-b23c-22620c594214",
      "clipId": "c7531e80-acc2-4635-ad7b-85a8b85220c0",
      "clipTitle": "The Template",
      "distractors": [
        "customerForm.controls('firstName').valid",
        "customerForm('firstName').valid",
        "customerForm.firstName.valid"
      ],
      "key": "customerForm.controls.firstName.valid",
      "moduleId": "c0fc9c74-66df-4fcf-8da2-05bd6af19a99",
      "stem": "Using the form model below, which is the correct syntax for referencing the `valid`property of the first name?\r\n\r\n\r\n    this.customerForm = new FormGroup({\r\n        firstName: new FormControl(),\r\n        sendCatalog: new FormControl()\r\n    });",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "bcb72419-4eb0-41a1-94f8-50dce26f256f",
      "clipId": "0db19f87-b9c6-464f-ad13-0a59aaecc15a",
      "clipTitle": "Caching with Interceptors",
      "distractors": [
        "HTTP request bodies",
        "Authentication headers",
        "HttpInterceptor interface",
        "HTTP request headers"
      ],
      "key": "HttpResponse object",
      "moduleId": "d7a36cf0-5937-450b-bd6c-58cdd3f75236",
      "stem": "What object should be stored as part of a client-side caching solution?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "81bfc1f3-5a48-49f9-9556-71afd0f3e736",
      "clipId": "182ad5ac-60c7-4fed-86d1-6d3427a83714",
      "clipTitle": "Creating Your First Service",
      "distractors": [
        "Import it and specify it as a parameter in the constructor decorated with the `Inject()` decorator.",
        "Import it and decorate the import with an `Inject()` decorator.",
        "Just import it using an import statement."
      ],
      "key": "Import it and specify it as a parameter in the constructor.",
      "moduleId": "35618061-5a41-4ea5-9cdf-1f325647651f",
      "stem": "How do you inject a service into a component, directive, pipe, or another service?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "dce512f4-cc46-4870-bf38-552e124b150e",
      "clipId": "b780e4d2-7b09-40c8-9307-97c88e9e7c22",
      "clipTitle": "Adding Logic with Directives: ngIf",
      "distractors": [
        "To repeat a set of elements based on an expression",
        "To use style classes to hide or show elements based on an expression",
        "To optionally navigate to another view based on an expression"
      ],
      "key": "To add or remove elements from the DOM based on an expression",
      "moduleId": "9cd0eae6-c6cc-4ca7-ba8c-780ea2b2bb42",
      "stem": "What is the purpose of the `*ngIf`directive?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "4467b700-8030-4885-a5f5-80d12c53591d",
      "clipId": "ba773d91-c9fe-4ab6-9f53-69db8810bd2b",
      "clipTitle": "Tying Routes to Actions",
      "distractors": ["`RouterAction`", "`Router`", "`RouterOutlet`"],
      "key": "`RouterLink`",
      "moduleId": "23871e4f-5427-4d6f-bf61-cc52804911a1",
      "stem": "Which routing directive is used to tie a route to a user action?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "79a5518d-1ae2-4f85-a83e-3476bac045bd",
      "clipId": "4e426fed-c494-44ed-a0e8-a0eb00a46e0a",
      "clipTitle": "Exploring Angular's CSS Encapsulation",
      "distractors": [
        "You must name your classes specifically so they don't affect things outside your component.",
        "You must declare your styles inside the component's template.",
        "You must namespace your classes so they don't affect things outside your component."
      ],
      "key": "You don't need to do anything, Angular takes care of this for you by default.",
      "moduleId": "a87a58a8-e2c5-48f9-95f7-84397c8935ef",
      "stem": "When adding styles to a component's styles property, how do you avoid those styles affecting html outside of your component?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "38f8b6de-0a94-4658-a49a-36d5e4d74bd5",
      "clipId": "35115f81-7e9d-4ac1-9d2c-0b830c34449e",
      "clipTitle": "Angular CLI JSON File",
      "distractors": ["`--skip`", "`--skip-git`", "`--skip-it`", "`--skip-install`"],
      "key": "`--skip-tests`",
      "moduleId": "5a5848db-3718-4b5b-9768-d53dfa64582a",
      "stem": "Which `ng new` flag instructs the Angular CLI to create files using the blueprints without creating specs?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "c22814cc-7192-45fa-b517-a6b1ef5cd36c",
      "clipId": "20b6e0b5-38ea-443d-a4be-56fce6f7905c",
      "clipTitle": "Introduction",
      "distractors": ["Act Arrange Assess", "Arrange Act Assess", "Act Arrange Assert"],
      "key": "Arrange Act Assert",
      "moduleId": "c2ccffae-3744-426c-9038-49c837be0691",
      "stem": "What does AAA stand for?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "d915ec1e-13a7-45d3-9c44-db97184ddc0a",
      "clipId": "a3c168f5-cf2e-43dd-bf88-7b62dc1a5610",
      "clipTitle": "Dependency Injection",
      "distractors": ["Routing", "Webpack", "Change Detection"],
      "key": "TypeScript",
      "moduleId": "ef9637a3-aa5b-42cd-a068-bf216ba15a3d",
      "stem": "Dependency Injection in Angular is closely tied to which technology?",
      "stemImageUrl": null,
      "courseId": "7c8fb1e8-044d-4067-9928-0ab7e25863f0"
    },
    {
      "questionId": "319790aa-373a-4cea-9b2b-358de54b2540",
      "clipId": "b4795896-04de-4dad-b100-fee26c214c50",
      "clipTitle": "Handling Form Control Events",
      "distractors": [
        "`<input onBlur=\"callFn()\">`",
        "`<input [(blur)]=\"callFn()\">`",
        "`<input blur=\"callFn()\">`",
        "`<input [blur]=\"callFn()\">`"
      ],
      "key": "`<input (blur)=\"callFn()\">`",
      "moduleId": "40a161c7-66c5-48b7-9262-4f707923ee11",
      "stem": "How would you execute a method when an input field loses focus?",
      "stemImageUrl": null,
      "courseId": "604a909e-ed7f-4d4b-949d-b341dc1d5046"
    },
    {
      "questionId": "4579adb8-5eed-492a-bbb4-661153339382",
      "clipId": "8d437264-13be-45bf-bcbd-68828a82d5cd",
      "clipTitle": "Placing the Template",
      "distractors": [
        "To activate a route when the user clicks an element",
        "To identify the location of the menu for the application",
        "To define the route configuration"
      ],
      "key": "To identify where to display the routed component's template",
      "moduleId": "69f6018c-aa4e-465d-9bbd-8c1e365a072c",
      "stem": "What is the purpose of the `router-outlet` directive?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "52875645-de06-42c3-b76b-047e889daf3a",
      "clipId": "47bfe516-1ade-4222-90e9-8ae3b9c9ea45",
      "clipTitle": "Populating Route Parameters: Demo",
      "distractors": [
        "It is destroyed and recreated.",
        "It is duplicated.",
        "It is re-initialized."
      ],
      "key": "It is reused.",
      "moduleId": "b2a3b4d8-dcbe-4426-a4db-01123b76f892",
      "stem": "What happens to a routed component if only the required route parameter changes?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "c4d28242-7f1d-43a4-abc7-ee31c400484a",
      "clipId": "03a91655-4e72-4f3c-bc7c-f25f0bac77ac",
      "clipTitle": "CanLoad Guard",
      "distractors": [
        "It defines how services are loaded.",
        "It defines how third-party libraries are loaded.",
        "It defines how the application is loaded."
      ],
      "key": "It defines how lazy loaded modules are loaded.",
      "moduleId": "6e6697ee-e137-4015-81c0-561254badafa",
      "stem": "What is the purpose of a preload strategy?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "49f41045-90c6-4ddb-b971-836e0b17325f",
      "clipId": "c259cf0b-afaf-4a0a-a162-2bb1a8d6d04e",
      "clipTitle": "Demo: Retrieving a Single Item",
      "distractors": ["Observable", "StatusCode", "ContentType", "Header"],
      "key": "HttpHeaders",
      "moduleId": "4bd0d46c-f530-4162-adfe-21f4d54cdbe8",
      "stem": "What built-in Angular class is used to attach headers to an HTTP request?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "4cfeda89-0e4c-48d9-9203-ea6ff5738666",
      "clipId": "62fded77-0cdf-4c9d-8e6d-26ed9056b40e",
      "clipTitle": "Defining Query Parameters",
      "distractors": [
        "As additional entries in the link paramters array, one for each query parameter",
        "In a separate link parameters array only for query parameters",
        "As a set of key and value pairs passed as a single entry in the link parameters array"
      ],
      "key": "As a set of key and value pairs passed separate from the link parameters array",
      "moduleId": "b2a3b4d8-dcbe-4426-a4db-01123b76f892",
      "stem": "How are query parameters populated?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "d9c46447-1fb9-47ad-9ceb-eaf8fcb6b117",
      "clipId": "3aa84150-16bf-45b5-9f39-4179cbbb4347",
      "clipTitle": "Going to Production - Overview",
      "distractors": [
        "The reason Newton discovered gravity",
        "A way to put multiple pieces of code together",
        "An Optimization algorithm for binary searches"
      ],
      "key": "Automated removal of unused code",
      "moduleId": "7d758805-b99d-4c61-b5b0-45985af70a56",
      "stem": "What is Tree Shaking?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "df37cce1-dbd9-42c7-b937-65b6db251de0",
      "clipId": "b963a7f7-01b9-456c-9552-0b1c556e48f2",
      "clipTitle": "Understanding RxJS Subjects",
      "distractors": [
        "subject = RxJS.createSubject<EventDataType>();",
        "subject = createSubject();",
        "subject = Observable.createSubject<EventDataType>();"
      ],
      "key": "subject = new Subject<EventDataType>();",
      "moduleId": "cadef368-dfae-45dd-92ef-b322e4526d7b",
      "stem": "How do you create a new instance of an RxJS subject when using TypeScript?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "13df5016-73ab-4d3a-aac7-2e071f6f2c11",
      "clipId": "df0e791c-b6fa-4d43-a93f-d3f73b0eff55",
      "clipTitle": "Using Angular's InjectionToken",
      "distractors": ["The TransparentToken class", "The Token class"],
      "key": "The InjectionToken class",
      "moduleId": "ce8b8c99-7d6c-49e5-a09d-58cb16cd9982",
      "stem": "What object allows you to create your own tokens?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "c95b9dfa-6571-43bd-839d-b8ec63e0bed7",
      "clipId": "f341e47d-bd6d-4814-a409-d7e5907e8e47",
      "clipTitle": "Triggering Events on Elements",
      "distractors": ["`hasBeenCalled()`", "`hasBeenCalledWith()`", "`toHaveBeenCalled()`"],
      "key": "`toHaveBeenCalledWith()`",
      "moduleId": "6bc19525-c008-4075-babf-ae2e96c42288",
      "stem": "If you want to know if a specific function was called with a specific parameter, which matcher should you use?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "5e52431f-73f7-475d-ac15-4a98185fe2c9",
      "clipId": "3acfcf3c-5da3-4ed9-93ba-fdf898e87fea",
      "clipTitle": "Structure of Angular HTTP Unit Tests",
      "distractors": ["MockModule", "TestFirst", "ngTest", "TestFaker"],
      "key": "TestBed",
      "moduleId": "8929053b-ec03-4369-a0d8-88b56b437453",
      "stem": "What Angular class is used to configure a test environment that simulates a running Angular application?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "404f3932-9b9c-4e43-8590-fb70adf4db0a",
      "clipId": "0c6a259f-6a96-4682-a215-e41ae05c5c56",
      "clipTitle": "Mocking an Injected Service",
      "distractors": [
        "{ provider: MyClass, service: myClass }",
        "{ provider: MyClass, useValue: myClass }",
        "{ provide: MyClass, service: myClass }"
      ],
      "key": "{ provide: MyClass, useValue: myClass }",
      "moduleId": "a5b15e41-2247-4484-9394-cac7792b9281",
      "stem": "Which is the correct longhand registration of a service in an Angular module?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "4c70ce22-25cd-4669-adc9-a4fa9e993578",
      "clipId": "1799df64-944f-466a-a0ff-0573752301f8",
      "clipTitle": "Defining the Base Path",
      "distractors": ["In the App module", "In the App component", "In the route configuration"],
      "key": "In the index.html file",
      "moduleId": "69f6018c-aa4e-465d-9bbd-8c1e365a072c",
      "stem": "Where is the base path specified?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "6ee0614d-8fda-4d77-b9a0-42b82c5ddaef",
      "clipId": "4e49fea9-1626-4174-8976-8699c2d17337",
      "clipTitle": "Demo: Handling a Promise with async/await",
      "distractors": [
        "On the import statement for the function",
        "In the success callback for the promise",
        "Just before the \"await\" keyword",
        "On the line that returns the result of the function call"
      ],
      "key": "Just before the function name in the declaration",
      "moduleId": "63b87213-d5f3-43c1-888b-f55948f8b394",
      "stem": "Where do you place the \"async\" keyword to declare that a function should execute asynchronously?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "0388cc36-2934-4449-a326-d933f29fb1df",
      "clipId": "182ad5ac-60c7-4fed-86d1-6d3427a83714",
      "clipTitle": "Creating Your First Service",
      "distractors": ["Import", "Input", "Injectable"],
      "key": "Inject",
      "moduleId": "35618061-5a41-4ea5-9cdf-1f325647651f",
      "stem": "Which decorator lets you inject a service registered with an Injection Token?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "d41d21ca-92c8-4d8b-91aa-03e201031e25",
      "clipId": "e935fa76-1f16-4a83-a7d9-e54a304262ff",
      "clipTitle": "The Angular Module",
      "distractors": ["ReactiveFormsModule and FormsModule", "ModelDrivenModule", "FormsModule"],
      "key": "ReactiveFormsModule",
      "moduleId": "c0fc9c74-66df-4fcf-8da2-05bd6af19a99",
      "stem": "To use the Reactive forms directives, which module(s) must be added to the imports array in an Angular module?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "a16c6634-6679-41ea-a6a8-57060ddccadc",
      "clipId": "dd3b878a-5bbc-48ea-ad51-8169fdce0201",
      "clipTitle": "Declaring a Component in an NgModule",
      "distractors": [
        "The root component `app.component.ts`",
        "The `main.ts` file",
        "Nothing is updated, only new files are created."
      ],
      "key": "The root module `app.module.ts`",
      "moduleId": "089192a5-2c90-41cc-9310-23064ed77d24",
      "stem": "When generating a component using the command `ng g c pet`, what file will be modified for you to declare the component by default?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "60658642-25b7-480f-9911-ed92d185f804",
      "clipId": "7a53ff85-4f1c-42a6-84e6-09b201bf619a",
      "clipTitle": "Installing and Verifying the Angular CLI",
      "distractors": ["angular/cli.exe", "`npm install @angular/cli`", "`curl @angular/cli`"],
      "key": "`npm install @angular/cli -g`",
      "moduleId": "33143d50-f2c9-43de-81af-5ec5c6fbfd49",
      "stem": "What command do you run to install the Angular CLI for your machine?",
      "stemImageUrl": null,
      "courseId": "7a5ea0d6-67cb-4b91-8d8b-8648e1d30725"
    },
    {
      "questionId": "a65e82c0-e65c-47a5-b5dd-8142670d18d0",
      "clipId": "8dffdc75-e672-4edc-a595-2c2ad9ed1a0c",
      "clipTitle": "Configuring Application Routes",
      "distractors": [
        "A partial path, matching only a portion of the route",
        "A secondary path, matching a secondary route",
        "A default path, matching an empty route"
      ],
      "key": "A wildcard path, matching if no prior path matches",
      "moduleId": "69f6018c-aa4e-465d-9bbd-8c1e365a072c",
      "stem": "What is the meaning of two asterisks (\\*\\*) as a route path?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "c6940105-9236-41be-9032-4422f4556e1a",
      "clipId": "5bbf70c9-a94a-4a3d-96b3-11b290b81c99",
      "clipTitle": "Introduction and Overview",
      "distractors": ["Interceptor", "GetReq", "HttpSender", "ClientRequest"],
      "key": "HttpClient",
      "moduleId": "79e93c6a-46cf-4ec5-aed5-40af4e664775",
      "stem": "What Angular class is used to make HTTP requests?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "22fd085c-5cfd-4d26-88ad-07eeca977716",
      "clipId": "48561408-895a-4b0b-bc46-523d0eb9b5e9",
      "clipTitle": "Creating a Custom Library",
      "distractors": [
        "ng make library my-library",
        "ng crteate library my-library",
        "ng add library my-library"
      ],
      "key": "ng generate library my-library",
      "moduleId": "e8e1aa51-fdc5-4d60-a41c-cbadf51b5d01",
      "stem": "What Angular CLI command can be used to create a library?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "43e8f875-2825-4cc6-9793-e4209477560e",
      "clipId": "0f515a77-5afd-4e74-803b-04b5296501cd",
      "clipTitle": "Hiding and Showing Content with ngIf",
      "distractors": ["ngAuthenticated", "ngShow", "ngHide"],
      "key": "ngIf",
      "moduleId": "7686a42c-9648-4392-98ef-c6f1938be823",
      "stem": "What directive helps you hide functionality you don’t want to be visible before users log in?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "dcbf0fe7-8cc6-425e-a828-6c39ce1fef78",
      "clipId": "d56036f8-9636-403f-be90-12164542bfd4",
      "clipTitle": "Writing Good Unit Tests",
      "distractors": [
        "Apple, Anteater, Aardvark",
        "Application, Act, Anterior",
        "Apply, Act, Assert"
      ],
      "key": "Arrange, Act, Assert",
      "moduleId": "eff0edc6-2c84-4c0a-8e62-247a82ee1c76",
      "stem": "What does AAA stand for concerning unit testing?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "71d009e2-7f4f-40c5-96f3-2d2559c8f63e",
      "clipId": "38b5ea40-04ed-4f22-b00a-6e28458b7d01",
      "clipTitle": "Passing State with Input and Output Properties",
      "distractors": ["Event bus", "HTML attribute", "Output property"],
      "key": "Input property",
      "moduleId": "240f0850-8c1e-4be2-86ee-5c3b9d93d1e9",
      "stem": "What technique is recommended to pass state from a parent component to a child component?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "5a8375c8-3d80-4295-b6fc-50cd6353cd97",
      "clipId": "80b3bcb0-ed9a-40fd-a463-7df0270263e3",
      "clipTitle": "Configuring Routes",
      "distractors": [
        "Path to the view and reference to a component",
        "Path URL segment and string component name",
        "Template URL and string component name"
      ],
      "key": "Path URL segment and reference to a component",
      "moduleId": "23871e4f-5427-4d6f-bf61-cc52804911a1",
      "stem": "A route is configured by specifying:",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "aa607fa6-c123-4654-a4dc-fdeae60a6c38",
      "clipId": "0dc24c4f-eb92-4831-ae02-f44750bf9fbf",
      "clipTitle": "Using setValue and patchValue",
      "distractors": [
        "To build the input elements for the template from the data model.",
        "To simplify updating form data from the component class.",
        "To build the input elements for the template from the form model."
      ],
      "key": "To simplify creation of the form model in the component class.",
      "moduleId": "c0fc9c74-66df-4fcf-8da2-05bd6af19a99",
      "stem": "What is the purpose of FormBuilder?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "62bb17de-0801-4a98-ac77-90f4375b188c",
      "clipId": "62fded77-0cdf-4c9d-8e6d-26ed9056b40e",
      "clipTitle": "Defining Query Parameters",
      "distractors": [
        "Optional parameters will automatically filter the displayed data.",
        "Query parameters will automatically filter the displayed data.",
        "Optional parameters can be retained across routes."
      ],
      "key": "Query parameters can be retained across routes.",
      "moduleId": "b2a3b4d8-dcbe-4426-a4db-01123b76f892",
      "stem": "What is the key usage difference between query parameters and optional parameters?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "a980ee4b-7bde-469f-9e52-e7998b654eb3",
      "clipId": "6f97c3df-0511-4f83-86f7-411bd1ad2603",
      "clipTitle": "Creating an Angular Application Using the Angular CLI",
      "distractors": [
        "A file marked with the `module` keyword",
        "A function you use to register components",
        "A class that is marked with a `module` decorator"
      ],
      "key": "A file with at least one `export` or `import`",
      "moduleId": "6eecf288-844b-4ca1-bc9d-8ce7cb4aa8e0",
      "stem": "An ES 2015 module is:",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "c5a94b8e-775c-48b9-816a-c022594103d6",
      "clipId": "01638a08-c3d9-4c93-8fd8-50e26f049c8d",
      "clipTitle": "What Is an Angular Service?",
      "distractors": ["pipe", "route", "module", "service"],
      "key": "component",
      "moduleId": "1f8d659b-fa0d-4d58-be34-7e849c4976e5",
      "stem": "What Angular construct should only be used to control and manage the user interface?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "2a5e6377-1667-4603-9335-0f80ce9b933b",
      "clipId": "1274f8b0-8300-48db-a7ee-d3f74de789c0",
      "clipTitle": "Reference vs. Value Types",
      "distractors": ["Event changes", "Function changes", "Component changes"],
      "key": "Reference changes",
      "moduleId": "240f0850-8c1e-4be2-86ee-5c3b9d93d1e9",
      "stem": "What specifically does Angular monitor when it determines whether or not to fire ngOnChanges()?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "ffaa33dd-f8c8-4a42-be5f-2360334c433b",
      "clipId": "f9a35b37-8585-4eb4-a041-934264139b8c",
      "clipTitle": "Demo: Implementing a Centralized Error Handler",
      "distractors": ["`FaultException`", "`CentralError`", "`Catch`", "`RootError`"],
      "key": "`ErrorHandler`",
      "moduleId": "a03c99b0-7be6-4157-aa09-365f41061df0",
      "stem": "What class must you implement in order to replace Angular's built-in error handling?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "0ce96205-969d-49fc-8527-1324b39e3347",
      "clipId": "dd8f5647-da85-4ab0-b7d6-24b3ec090d21",
      "clipTitle": "Multiple Slot Content Projection",
      "distractors": ["#selector", ".selector"],
      "key": "[selector]",
      "moduleId": "9881e453-9a71-4023-8818-dcf11147aebe",
      "stem": "Which of the following is an attribute css selector?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "4ec15a47-38a7-47c6-bcde-87484227721f",
      "clipId": "4ed06552-c52a-491b-9dd7-b8a0f07f56e4",
      "clipTitle": "Configuring a Parameterized Route",
      "distractors": [
        "With the `params` keyword",
        "With a simple string",
        "With a placeholder prefixed with an asterisk"
      ],
      "key": "With a placeholder prefixed with a colon",
      "moduleId": "b2a3b4d8-dcbe-4426-a4db-01123b76f892",
      "stem": "How is a required parameter specified in a route configuration?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "21bb60f0-5327-461e-a82b-6b1311587ee2",
      "clipId": "f40db2a2-e5d7-4eed-af2e-8c1420cd701b",
      "clipTitle": "Filtering Data",
      "distractors": [
        "To improve performance",
        "In case you want to make edits to the data",
        "To improve rendering ease",
        "Otherwise you will lose data"
      ],
      "key": "To maintain the order between page refreshes",
      "moduleId": "3eb794e4-e1d8-46bb-b95f-0c11d2fa08f2",
      "stem": "When filtering data, why should you create a copy of the data being filtered?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "2b44d5c6-e173-44af-a015-c62d7f9ea840",
      "clipId": "7c375287-b8ea-409e-a697-477fe6c142e5",
      "clipTitle": "Bootstrapping an Angular App",
      "distractors": [
        "You load the component directly from your main SystemJs package (e.g. `main.ts`).",
        "You load the compoment directly in your index.html file.",
        "You add the component as a package in your SystemJs config."
      ],
      "key": "You add the component to the bootstrap array in your main app module.",
      "moduleId": "141673c4-d889-4f3b-91fd-e7190fed0544",
      "stem": "When bootstrapping an Angular app, how do you specify the main, top-level app component to be used?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "c811ac3e-c762-40bb-b5ad-6c2868c5457a",
      "clipId": "61843d6e-45c9-449c-a1f1-302792f17740",
      "clipTitle": "TypeScript",
      "distractors": [
        "TypeScript is Microsoft's version of JavaScript, it's exactly the same",
        "TypeScript is not at all related to JavaScript",
        "TypeScript is a subset of JavaScript, just the class-based features"
      ],
      "key": "TypeScript is a superset of JavaScript, all of JavaScript plus more",
      "moduleId": "6eecf288-844b-4ca1-bc9d-8ce7cb4aa8e0",
      "stem": "How is TypeScript related to JavaScript?",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "5881ab9f-dde9-4787-9529-56fb54fd6ff6",
      "clipId": "01638a08-c3d9-4c93-8fd8-50e26f049c8d",
      "clipTitle": "What Is an Angular Service?",
      "distractors": [
        "Coordinator of routing",
        "Collection of methods that don't fit anywhere else",
        "Encapsulated data presented in UI",
        "Orchestrator of view logic"
      ],
      "key": "Discrete piece of reusable functionality",
      "moduleId": "1f8d659b-fa0d-4d58-be34-7e849c4976e5",
      "stem": "Which of the following best describe an Angular service?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "0a862f0e-411f-497d-af03-8876e77c23e5",
      "clipId": "7d00ae4b-0101-4f36-934d-00473e5a441c",
      "clipTitle": "Server-side Rendering",
      "distractors": ["Prettier", "Ruby on Rails", "Webpack"],
      "key": "Angular Universal",
      "moduleId": "c9fb3ce6-dfc5-4fb7-8877-a3fa3f6cd9c5",
      "stem": "Server-side rendering in Angular happens using which tool?",
      "stemImageUrl": null,
      "courseId": "7c8fb1e8-044d-4067-9928-0ab7e25863f0"
    },
    {
      "questionId": "21b69349-cad4-4196-929c-8ad29a7c344e",
      "clipId": "f6e35bf2-8ef4-4d46-ab63-d3d705e56c5e",
      "clipTitle": "Configuring Child Routes",
      "distractors": ["hierarchy: [ ]", "parent: [ ]", "child: [ ]"],
      "key": "children: [ ]",
      "moduleId": "ce45e68b-2862-40ff-ada9-315d2f49b5b9",
      "stem": "Which of the following is the correct **property **for configurating child routes?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "2ba03725-63a3-47d4-9b47-f2373161e699",
      "clipId": "743b4f21-d8de-42d3-826d-5ec250838181",
      "clipTitle": "Reacting to Routing Events",
      "distractors": [
        "Implement the `OnNavigate` lifecycle hook.",
        "Implement the `OnEvent` lifecycle hook.",
        "Subscribe to the route's `navigate` observable."
      ],
      "key": "Subscribe to the route's `events` observable.",
      "moduleId": "77f5ce93-9faa-43b3-9e7e-1dd622d45074",
      "stem": "How can our code react to routing events?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "7d80e901-322d-4cbd-bfd8-d09bd13d14be",
      "clipId": "e894eee8-91c0-4730-a2f5-a8c631bc217c",
      "clipTitle": "Resolver Error Handling",
      "distractors": [
        "On the resolver service using the `resolve` decorator",
        "On the resolver service using the `data` decorator",
        "In the configuration using the `data` property"
      ],
      "key": "In the configuration using the `resolve` property",
      "moduleId": "ad109302-ba92-4047-a6fa-91393a48b733",
      "stem": "How is a resolver service associated with a route?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "6cacff34-9d78-4e20-bccc-41f26b8c7203",
      "clipId": "dec50e4b-b318-46ec-8718-015a18e6a67b",
      "clipTitle": "Data Access Service",
      "distractors": [
        "Manage routing to the data access service",
        "Watch the network traffic, keeping track of all requests and responses"
      ],
      "key": "Manage asynchronous data, such as data coming from a backend server",
      "moduleId": "e34c82bc-f84e-4c98-9803-d59f5e433731",
      "stem": "A key use of observables in a data access component is to:",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "ac0b8936-6da7-49aa-a467-2cc4894ed1c3",
      "clipId": "7a202473-f286-43d0-9fd0-224f80f697be",
      "clipTitle": "Parts of a Service",
      "distractors": ["function", "import", "enum", "interface"],
      "key": "class",
      "moduleId": "1492c1eb-4ae2-42e2-a9a4-184958760ad4",
      "stem": "What TypeScript language construct is used to create a new Angular service?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "5fa805e0-5854-4234-a01f-5f5467327374",
      "clipId": "79a40a97-2331-42d5-b328-fa17bc3ad60a",
      "clipTitle": "Unsubscribing from Observables",
      "distractors": ["ngOnUnsubscribe()", "destroy()", "ngOnInit()"],
      "key": "ngOnDestroy()",
      "moduleId": "cadef368-dfae-45dd-92ef-b322e4526d7b",
      "stem": "Where should you unsubscribe from observables in a component?",
      "stemImageUrl": null,
      "courseId": "cb3d0dbc-8c19-4003-983e-a1ff4cdbd7fd"
    },
    {
      "questionId": "f48544f7-9e6a-4c07-b0f5-95a2d76dd2cb",
      "clipId": "339f9567-b35c-4c4b-8e63-89e7d06ca619",
      "clipTitle": "What Are Interceptors?",
      "distractors": [
        "Set only custom HTTP headers",
        "Set only two well-known HTTP headers",
        "Allow the modification of HTTP responses only",
        "Allow the modification of HTTP requests only"
      ],
      "key": "Allow the modification of HTTP requests and responses",
      "moduleId": "55e63a75-3152-4eb2-aa9a-07debb59174f",
      "stem": "Which of the following best describes the capabilities of interceptors?",
      "stemImageUrl": null,
      "courseId": "a27d6cb0-83ae-4fbb-a6b9-12e0996ca750"
    },
    {
      "questionId": "eb50a5d9-14b7-4934-aa04-3f79356af373",
      "clipId": "19a16b0d-fa1e-49a1-a434-b76fec19c8f8",
      "clipTitle": "Creating a Custom Pipe",
      "distractors": [
        "If you need to sort and filter your data",
        "If you need to format an absolutely positioned node",
        "If you need to format an object and not just a primitive"
      ],
      "key": "If you need to have some business-specific formatting",
      "moduleId": "3eb794e4-e1d8-46bb-b95f-0c11d2fa08f2",
      "stem": "When would you create a custom pipe?",
      "stemImageUrl": null,
      "courseId": "19716188-f694-4253-85cb-43de7ba6d54e"
    },
    {
      "questionId": "e5bccd3c-a647-4be3-9da6-de792ab105c0",
      "clipId": "3c6a5a7a-020d-4fa3-957f-8c1dd33e211d",
      "clipTitle": "Demo: Multiple Ways to Provide Services",
      "distractors": ["`useValue`", "`useDefinition`", "`useFactory`", "`useClass`"],
      "key": "`useExisting`",
      "moduleId": "27f789c6-c96b-4bf0-be54-faf9dfac8afa",
      "stem": "What provider recipe will reuse the same instance of a previously provided dependency?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "1ab4b433-c83a-4950-acdc-d3b65b8c207d",
      "clipId": "fe8058c5-8d5a-4f59-a0a8-cad13655fd7b",
      "clipTitle": "Creating the Component Class",
      "distractors": ["module", "public", "import"],
      "key": "export",
      "moduleId": "97fbb958-e828-4258-8fc0-531723bc5206",
      "stem": "To make a class available to other parts of the application, use this keyword on the class declaration:",
      "stemImageUrl": null,
      "courseId": "12d7d1cc-b3ec-40b2-b13e-3c35e8ba07a5"
    },
    {
      "questionId": "2fd66b6f-5907-40e0-9cc5-c182f1ba63ec",
      "clipId": "35d74998-792c-4328-979c-bfcc8faef0fd",
      "clipTitle": "Deciding Where to Provide Services",
      "distractors": [
        "In the base service",
        "In the Webpack configuration",
        "In the tsconfig file",
        "In a child component"
      ],
      "key": "In an NgModule",
      "moduleId": "27f789c6-c96b-4bf0-be54-faf9dfac8afa",
      "stem": "Where should you provide a service that will be used throughout an application?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "619bbef4-48fa-4682-85d4-2d72e77e0071",
      "clipId": "c8727c07-8c77-41fb-8f8a-3f733e18733e",
      "clipTitle": "Define a FormGroup",
      "distractors": [
        "A form building block that you can use to group related radio buttons",
        "A style class that you can use to style a group of related elements"
      ],
      "key": "A form building block used to manage a set of FormControls or nested FormGroups.",
      "moduleId": "49309a7f-772a-4813-a9cf-c55eb6400ae1",
      "stem": "What is a FormGroup?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "88a514aa-0fe4-40eb-8e54-fcab754f1471",
      "clipId": "fe226615-3b47-4dad-bb95-bb53dbde5a58",
      "clipTitle": "Demo: Finding and Using Built-in Services",
      "distractors": [
        "Angular source code",
        "Angular XML documentation",
        "StackOverflow",
        "Codeplex"
      ],
      "key": "Angular API documentation",
      "moduleId": "a03c99b0-7be6-4157-aa09-365f41061df0",
      "stem": "What is the best resource for researching available Angular services and extension points?",
      "stemImageUrl": null,
      "courseId": "59bd5c8f-df7d-4691-990c-f7499f8e9eac"
    },
    {
      "questionId": "62e2b013-8601-4155-ac23-5f7cff14a36e",
      "clipId": "8d66dbd7-fed3-43b6-be0e-819ca3f80e59",
      "clipTitle": "Decorating Input and Output Properties",
      "distractors": [
        "There is no need to identify input and output properties",
        "Declare them in the module where the components are declared",
        "Declare them in the `inputs` and `outputs` component metadata properties"
      ],
      "key": "Use the @Input() and @Output() decorators on component properties",
      "moduleId": "fe3763c7-78bc-4fc2-825d-026465c17259",
      "stem": "What is the recommended way to identify input and output properties on components?",
      "stemImageUrl": null,
      "courseId": "8525a84d-8923-43d7-b752-6fa8d94b2a0a"
    },
    {
      "questionId": "85f7de14-47cd-4421-af76-7c064c9fb098",
      "clipId": "a0be0cd0-034b-4bd0-96ab-821f20f1fa15",
      "clipTitle": "Reading Route Parameters: Snapshot",
      "distractors": [
        "Snapshot is for optional parameters; observable is for required parameters.",
        "Snapshot is for required parameters; observable is for optional parameters.",
        "Snapshot provides change notifications; observable provides initial value only."
      ],
      "key": "Snapshot provides initial value only; observable provides change notifications.",
      "moduleId": "b2a3b4d8-dcbe-4426-a4db-01123b76f892",
      "stem": "What is the primary difference between reading route parameters using a snapshot versus using an observable?",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "e7847c8c-6c22-45e5-bb36-99bb28b522a0",
      "clipId": "dec50e4b-b318-46ec-8718-015a18e6a67b",
      "clipTitle": "Data Access Service",
      "distractors": [
        "A message that is sent back from the Web server containing the result of an action, such as GET, POST, or PUT",
        "A query sent to a database on a Web server"
      ],
      "key": "A message that is sent to a Web server requesting an action such as a GET, POST, or PUT",
      "moduleId": "e34c82bc-f84e-4c98-9803-d59f5e433731",
      "stem": "What is an HTTP request?",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    },
    {
      "questionId": "3b5570f5-d210-4c76-a316-d629fd101f07",
      "clipId": "b1035e68-3273-4296-b86a-130055dac22f",
      "clipTitle": "Mocking to Isolate Code",
      "distractors": ["`spy()`", "`mock()`", "`createMockObj()`"],
      "key": "`createSpyObj()`",
      "moduleId": "c8a81c99-3773-4685-a4a8-7feae45e2ea6",
      "stem": "What Jasmine function creates a mock object?",
      "stemImageUrl": null,
      "courseId": "9225052e-068d-4f77-a472-42259b6ba5ff"
    },
    {
      "questionId": "94b3ce80-b33d-4a57-a7e1-190306f65366",
      "clipId": "8d437264-13be-45bf-bcbd-68828a82d5cd",
      "clipTitle": "Placing the Template",
      "distractors": ["one primary and one secondary", "any number of", "zero"],
      "key": "one",
      "moduleId": "69f6018c-aa4e-465d-9bbd-8c1e365a072c",
      "stem": "A single router outlet can display _______ routed component templates at a time. (Fill in the blank.)",
      "stemImageUrl": null,
      "courseId": "01cc5a0e-4a99-4e27-ad9d-3157eb1b67ba"
    },
    {
      "questionId": "feba5c81-b696-4425-9775-f77d761ce373",
      "clipId": "a9cb2253-3021-4ee0-9c8c-8ca9eadf340c",
      "clipTitle": "Cross-Field Validation: Nested FormGroup",
      "distractors": [
        "No changes are required here, instead group the controls in the template HTML.",
        "Add a group name as the third element of the array for each of the email FormControls."
      ],
      "key": "Define a nested group with the FormBuilder group method and move the email FormControls into that group.",
      "moduleId": "5ac0688c-a15f-4da9-9019-5fdcea8d38ae",
      "stem": "Based on the form model below, what changes are required to group the email FormControls for cross-field validation?\r\n\r\n\r\n    this.customerForm = this.fb.group({\r\n       firstName: ['', Validators.required],\r\n       email: ['', Validators.required],\r\n       confirmEmail: ['', Validators.required]\r\n    });",
      "stemImageUrl": null,
      "courseId": "66a1b3cd-1d38-4962-952a-78bf63ae8a74"
    }
  ]
}
